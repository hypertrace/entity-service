apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ .Values.entityServiceConfig.name }}
  labels:
    release: {{ .Release.Name }}
data:
  application.conf: |-
    entity.service.config = {
      document.store {
        {{- if .Values.database }}
        {{- $dst := .Values.database.type }}
        dataStoreType = {{ $dst }}
        appName = {{ .Values.service.name }}
        aggregationPipelineMode = {{ .Values.database.aggregationPipelineMode }}
        {{ $dst }} {
          {{- range $key, $value := (index .Values "database" (printf "%s" $dst)) }}
          {{- if $value }}
            {{- if hasPrefix "${?" (printf "%s" $value) }}
          {{ $key }} = {{ $value }}
            {{- else }}
          {{ $key }} = {{- toJson $value }}
            {{- end }}
          {{- end }}
          {{- end }}
        }
        {{- end }}
      }
      publish.change.events = {{ .Values.entityServiceConfig.publishChangeEvents }}
    }
    entity.service.change = {
      enabled.entity.types = {{ .Values.entityServiceConfig.changeEnabledEntityTypes | toJson }}
      skip.attributes = {{ .Values.entityServiceConfig.skipAttributes | toJson }}
    }
    attribute.service.config = {
      host = {{ .Values.entityServiceConfig.attributeService.host }}
      port = {{ .Values.entityServiceConfig.attributeService.port }}
    }
    event.store {
      type = kafka
      bootstrap.servers = "bootstrap:9092"
      entity.change.events.producer {
        bootstrap.servers = "bootstrap:9092"
        schema.registry.url = "http://schema-registry-service:8081"
      }
    }
    entity.query.service.max.string.length.for.update = {{ .Values.entityQueryService.maxStringLengthForUpdate }}
  {{- if .Values.attributes }}
    entity.service.attributeMap = [
  {{- range $i, $v := .Values.attributes }}
  {{- if gt $i 0 }},{{- end}}
      {
        "scope": {{ $v.scope | quote }},
        "name": {{ $v.name | quote }},
        "subDocPath": {{ $v.subDocPath | quote }}
      }
  {{- end }}
  {{- range $i, $v := .Values.extraAttributes }}
  {{- if or ($.Values.attributes) (gt $i 0) }},{{- end}}
      {
        "scope": {{ $v.scope | quote }},
        "name": {{ $v.name | quote }},
        "subDocPath": {{ $v.subDocPath | quote }}
      }
  {{- end }}
    ]
  {{- end -}}
  {{- if .Values.idAttributes }}
    entity.service.idAttributeMap = [
  {{- range $i, $v := .Values.idAttributes }}
  {{- if gt $i 0 }},{{- end }}
      {
        "scope": {{ $v.scope | quote }},
        "attribute": {{ $v.attribute | quote }},
      }
  {{- end }}
    ]
  {{- end -}}
