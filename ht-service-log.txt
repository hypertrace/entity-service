[main] INFO org.hypertrace.agent.core.HypertraceConfig - Config loaded: {"serviceName":"ht-entity-service","reporting":{"endpoint":"http://host.docker.internal:9411/api/v2/spans","opa":{"endpoint":"http://opa.traceableai:8181/","pollPeriodSeconds":30}},"dataCapture":{"httpHeaders":{"request":true,"response":true},"httpBody":{"request":true,"response":true},"rpcMetadata":{"request":true,"response":true},"rpcBody":{"request":true,"response":true}},"propagationFormats":["TRACECONTEXT"]}
[opentelemetry.auto.trace 2020-12-16 11:13:54:972 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loaded bootstrap package prefixes from org.hypertrace.agent.otel.extensions.HypertraceBootstrapPackagesProvider: [org.hypertrace.agent]
[opentelemetry.auto.trace 2020-12-16 11:13:54:976 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.api.WeakMap$Provider - Weak map provider set to io.opentelemetry.javaagent.tooling.WeakMapSuppliers$WeakConcurrent@4d1c00d0
[opentelemetry.auto.trace 2020-12-16 11:13:55:124 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Too late to enable net.bytebuddy.raw
[opentelemetry.auto.trace 2020-12-16 11:13:55:605 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.server.GrpcServerBodyInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:637 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.NettyHttp2HeadersInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:639 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.instrumentation.hypertrace.apachehttpclient.v4_0.readall.InputStreamReadAllInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:639 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.InstrumentationModule - Instrumentation httpclient-readall is disabled
[opentelemetry.auto.trace 2020-12-16 11:13:55:639 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.instrumentation.hypertrace.jaxrs.v2_0.JaxrsClientBodyInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:641 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:643 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:645 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.servlet.v2_2.Servlet2InstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:733 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.servlet.v2_2.Servlet2InstrumentationModule javax.servlet.ServletResponse=java.lang.Integer
[opentelemetry.auto.trace 2020-12-16 11:13:55:735 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.servlet.v2_2.Servlet2InstrumentationModule javax.servlet.ServletResponse=java.lang.Integer
[opentelemetry.auto.trace 2020-12-16 11:13:55:736 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.jetty.JettyInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:737 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.servlet.v3_0.Servlet3InstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:738 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.sparkjava.SparkInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:739 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.grpc.v1_5.GrpcInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:741 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.okhttp.v3_0.OkHttp3InstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:741 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.apachehttpclient.v4_0.ApacheHttpClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:742 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.jaxrsclient.v2_0.JaxRsClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:743 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.vertx.VertxWebInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:744 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.akkaactor.AkkaActorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:744 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.InstrumentationModule - Instrumentation akka-actor is disabled
[opentelemetry.auto.trace 2020-12-16 11:13:55:744 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.akkahttp.AkkaHttpClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:745 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.akkahttp.AkkaHttpServerInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:746 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.apachecamel.ApacheCamelInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:746 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.apachehttpasyncclient.ApacheHttpAsyncClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:748 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.armeria.v1_0.ArmeriaInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:749 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.asynchttpclient.AsyncHttpClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:764 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.asynchttpclient.AsyncHttpClientInstrumentationModule com.ning.http.client.AsyncHandler=io.opentelemetry.javaagent.instrumentation.api.Pair
[opentelemetry.auto.trace 2020-12-16 11:13:55:765 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.asynchttpclient.AsyncHttpClientInstrumentationModule com.ning.http.client.AsyncHandler=io.opentelemetry.javaagent.instrumentation.api.Pair
[opentelemetry.auto.trace 2020-12-16 11:13:55:765 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.awslambda.v1_0.AwsLambdaInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:766 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.javaclassloader.ClassLoaderInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:768 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.dropwizardviews.DropwizardViewsInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:769 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:811 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.util.concurrent.ForkJoinTask=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:811 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.util.concurrent.Future=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:812 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.util.concurrent.Callable=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:812 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.lang.Runnable=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:813 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.util.concurrent.ForkJoinTask=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:813 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.util.concurrent.Future=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:813 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.util.concurrent.Callable=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:813 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.lang.Runnable=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:814 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.util.concurrent.ForkJoinTask=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:814 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.util.concurrent.Future=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:815 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.util.concurrent.Callable=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:815 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.lang.Runnable=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:815 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.util.concurrent.ForkJoinTask=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:815 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.util.concurrent.Future=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:815 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.util.concurrent.Callable=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:815 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.lang.Runnable=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:816 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.util.concurrent.ForkJoinTask=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:816 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.util.concurrent.Future=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:816 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.util.concurrent.Callable=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:816 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule java.lang.Runnable=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:816 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.javaconcurrent.NonStandardExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:825 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.javaconcurrent.NonStandardExecutorInstrumentationModule java.lang.Runnable=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:825 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.extannotations.TraceAnnotationsInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:836 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.finatra.FinatraInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:837 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.geode.GeodeInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:838 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.googlehttpclient.GoogleHttpClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:848 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.googlehttpclient.GoogleHttpClientInstrumentationModule com.google.api.client.http.HttpRequest=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:55:848 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.grizzly.GrizzlyInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:848 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.InstrumentationModule - Instrumentation grizzly is disabled
[opentelemetry.auto.trace 2020-12-16 11:13:55:848 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.guava.GuavaInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:856 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.guava.GuavaInstrumentationModule java.lang.Runnable=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:856 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlConnectionInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:865 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlConnectionInstrumentationModule java.net.HttpURLConnection=io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlConnectionInstrumentationModule$HttpUrlState
[opentelemetry.auto.trace 2020-12-16 11:13:55:865 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.hystrix.HystrixInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:866 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.httpclient.HttpClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:868 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.jdbc.JdbcDataSourceInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:868 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.InstrumentationModule - Instrumentation jdbc-datasource is disabled
[opentelemetry.auto.trace 2020-12-16 11:13:55:868 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.jdbc.JdbcInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:870 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.jms.JmsInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:881 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.jms.JmsInstrumentationModule javax.jms.MessageConsumer=io.opentelemetry.javaagent.instrumentation.jms.MessageDestination
[opentelemetry.auto.trace 2020-12-16 11:13:55:881 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.jms.JmsInstrumentationModule javax.jms.MessageConsumer=io.opentelemetry.javaagent.instrumentation.jms.MessageDestination
[opentelemetry.auto.trace 2020-12-16 11:13:55:881 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.jms.JmsInstrumentationModule javax.jms.MessageConsumer=io.opentelemetry.javaagent.instrumentation.jms.MessageDestination
[opentelemetry.auto.trace 2020-12-16 11:13:55:881 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.jms.JmsInstrumentationModule javax.jms.MessageConsumer=io.opentelemetry.javaagent.instrumentation.jms.MessageDestination
[opentelemetry.auto.trace 2020-12-16 11:13:55:882 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.jsp.JspInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:883 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.kafkaclients.KafkaClientsInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:884 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.kafkastreams.KafkaStreamsInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:886 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.khttp.KHttpInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:887 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.kotlinxcoroutines.KotlinCoroutinesInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:887 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.kubernetesclient.KubernetesClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:888 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.methods.MethodInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:888 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.otelannotations.WithSpanInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:889 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.opentelemetryapi.OpenTelemetryApiInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:892 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.opentelemetrysdk.OpenTelemetrySdkInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:892 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.oshi.OshiInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:893 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.rabbitmq.RabbitMqInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:895 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.ratpack.RatpackInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:898 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.reactor.ReactorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:899 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.reactornetty.ReactorNettyInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:899 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.rediscala.RediscalaInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:900 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.redisson.RedissonInstrumentation
[opentelemetry.auto.trace 2020-12-16 11:13:55:901 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.rmi.client.RmiClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:901 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.rmi.context.RmiContextPropagationInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:909 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.rmi.context.RmiContextPropagationInstrumentationModule sun.rmi.transport.Connection=java.lang.Boolean
[opentelemetry.auto.trace 2020-12-16 11:13:55:909 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.rmi.context.RmiContextPropagationInstrumentationModule sun.rmi.transport.Connection=java.lang.Boolean
[opentelemetry.auto.trace 2020-12-16 11:13:55:909 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.rmi.server.RmiServerInstrumentation
[opentelemetry.auto.trace 2020-12-16 11:13:55:910 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.scalaexecutors.ScalaConcurrentInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:931 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.scalaexecutors.ScalaConcurrentInstrumentationModule scala.concurrent.forkjoin.ForkJoinTask=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:931 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.scalaexecutors.ScalaConcurrentInstrumentationModule java.util.concurrent.Callable=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:931 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.scalaexecutors.ScalaConcurrentInstrumentationModule java.lang.Runnable=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:932 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.scalaexecutors.ScalaConcurrentInstrumentationModule scala.concurrent.forkjoin.ForkJoinTask=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:932 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.scalaexecutors.ScalaConcurrentInstrumentationModule java.util.concurrent.Callable=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:933 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.scalaexecutors.ScalaConcurrentInstrumentationModule java.lang.Runnable=io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:55:933 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.spymemcached.SpymemcachedInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:934 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.struts2.Struts2InstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:935 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.twilio.TwilioInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:937 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.vertx.reactive.VertxRxInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:938 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.apachehttpclient.v2_0.ApacheHttpClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:938 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.awssdk.v1_11.AwsSdkInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:948 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.awssdk.v1_11.AwsSdkInstrumentationModule com.amazonaws.AmazonWebServiceRequest=io.opentelemetry.javaagent.instrumentation.awssdk.v1_11.RequestMeta
[opentelemetry.auto.trace 2020-12-16 11:13:55:948 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.awssdk.v1_11.AwsSdkInstrumentationModule com.amazonaws.AmazonWebServiceRequest=io.opentelemetry.javaagent.instrumentation.awssdk.v1_11.RequestMeta
[opentelemetry.auto.trace 2020-12-16 11:13:55:948 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.awssdk.v1_11.AwsSdkInstrumentationModule com.amazonaws.AmazonWebServiceRequest=io.opentelemetry.javaagent.instrumentation.awssdk.v1_11.RequestMeta
[opentelemetry.auto.trace 2020-12-16 11:13:55:949 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.awssdk.v1_11.AwsSdkInstrumentationModule com.amazonaws.AmazonWebServiceRequest=io.opentelemetry.javaagent.instrumentation.awssdk.v1_11.RequestMeta
[opentelemetry.auto.trace 2020-12-16 11:13:55:949 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.awssdk.v2_2.AwsSdkInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:950 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.cassandra.v3_0.CassandraClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:950 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.cassandra.v4_0.CassandraClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:951 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.couchbase.v2_0.CouchbaseInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:953 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.couchbase.v2_6.CouchbaseInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:961 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.couchbase.v2_6.CouchbaseInstrumentationModule com.couchbase.client.core.message.CouchbaseRequest=io.opentelemetry.javaagent.shaded.io.opentelemetry.api.trace.Span
[opentelemetry.auto.trace 2020-12-16 11:13:55:962 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.couchbase.v2_6.CouchbaseInstrumentationModule com.couchbase.client.core.message.CouchbaseRequest=io.opentelemetry.javaagent.shaded.io.opentelemetry.api.trace.Span
[opentelemetry.auto.trace 2020-12-16 11:13:55:962 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.elasticsearch.rest.v5_0.Elasticsearch5RestClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:963 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.elasticsearch.rest.v6_4.Elasticsearch6RestClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:964 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.elasticsearch.transport.v5_0.Elasticsearch5TransportClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:965 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.elasticsearch.transport.v5_3.Elasticsearch53TransportClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:967 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.elasticsearch.transport.v6_0.Elasticsearch6TransportClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:55:968 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:005 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Transaction=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:005 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Criteria=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:005 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.StatelessSession=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:005 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Query=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:005 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Session=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:005 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Transaction=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:006 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Criteria=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:006 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.StatelessSession=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:006 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Query=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:006 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Session=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:006 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Transaction=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:006 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Criteria=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:007 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.StatelessSession=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:007 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Query=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:007 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Session=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:007 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Transaction=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:007 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Criteria=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:008 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.StatelessSession=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:008 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Query=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:008 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Session=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:008 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Transaction=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:008 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Criteria=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:009 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.StatelessSession=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:009 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Query=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:009 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v3_3.HibernateInstrumentationModule org.hibernate.Session=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:009 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:037 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.Transaction=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:037 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.Criteria=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:038 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.SharedSessionContract=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:038 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.Query=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:038 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.Transaction=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:038 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.Criteria=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:038 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.SharedSessionContract=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:038 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.Query=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:039 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.Transaction=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:039 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.Criteria=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:039 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.SharedSessionContract=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:039 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.Query=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:039 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.Transaction=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:040 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.Criteria=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:040 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.SharedSessionContract=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:040 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.Query=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:040 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.Transaction=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:040 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.Criteria=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:040 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.SharedSessionContract=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:040 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_0.HibernateInstrumentationModule org.hibernate.Query=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:040 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.hibernate.v4_3.HibernateInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:054 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_3.HibernateInstrumentationModule org.hibernate.procedure.ProcedureCall=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:055 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_3.HibernateInstrumentationModule org.hibernate.SharedSessionContract=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:055 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_3.HibernateInstrumentationModule org.hibernate.procedure.ProcedureCall=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:055 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.hibernate.v4_3.HibernateInstrumentationModule org.hibernate.SharedSessionContract=io.opentelemetry.javaagent.shaded.io.opentelemetry.context.Context
[opentelemetry.auto.trace 2020-12-16 11:13:56:055 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.jaxrs.v1_0.JaxRsInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:057 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.jaxrsclient.v1_1.JaxRsClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:058 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.jedis.v1_4.JedisInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:059 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.jedis.v3_0.JedisInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:059 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.lettuce.v4_0.LettuceInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:062 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.lettuce.v5_0.LettuceInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:066 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.lettuce.v5_1.LettuceInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:067 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.log4j.v1_2.Log4j1InstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:075 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.log4j.v1_2.Log4j1InstrumentationModule org.apache.log4j.spi.LoggingEvent=io.opentelemetry.javaagent.shaded.io.opentelemetry.api.trace.Span
[opentelemetry.auto.trace 2020-12-16 11:13:56:075 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.log4j.v1_2.Log4j1InstrumentationModule org.apache.log4j.spi.LoggingEvent=io.opentelemetry.javaagent.shaded.io.opentelemetry.api.trace.Span
[opentelemetry.auto.trace 2020-12-16 11:13:56:075 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.log4j.v2_13_2.Log4j2InstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:076 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.log4j.v2_7.Log4j27InstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:077 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.logback.v1_0.LogbackInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:085 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.logback.v1_0.LogbackInstrumentationModule ch.qos.logback.classic.spi.ILoggingEvent=io.opentelemetry.javaagent.shaded.io.opentelemetry.api.trace.Span
[opentelemetry.auto.trace 2020-12-16 11:13:56:086 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.logback.v1_0.LogbackInstrumentationModule ch.qos.logback.classic.spi.ILoggingEvent=io.opentelemetry.javaagent.shaded.io.opentelemetry.api.trace.Span
[opentelemetry.auto.trace 2020-12-16 11:13:56:086 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.mongo.v3_1.MongoClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:088 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.mongo.v3_7.MongoClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:089 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.mongoasync.v3_3.MongoAsyncClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:089 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.netty.v3_8.NettyInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:098 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.netty.v3_8.NettyInstrumentationModule org.jboss.netty.channel.Channel=io.opentelemetry.javaagent.instrumentation.netty.v3_8.ChannelTraceContext
[opentelemetry.auto.trace 2020-12-16 11:13:56:098 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.netty.v3_8.NettyInstrumentationModule org.jboss.netty.channel.Channel=io.opentelemetry.javaagent.instrumentation.netty.v3_8.ChannelTraceContext
[opentelemetry.auto.trace 2020-12-16 11:13:56:099 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.netty.v3_8.NettyInstrumentationModule org.jboss.netty.channel.Channel=io.opentelemetry.javaagent.instrumentation.netty.v3_8.ChannelTraceContext
[opentelemetry.auto.trace 2020-12-16 11:13:56:099 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.netty.v4_0.NettyInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:101 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.netty.v4_1.NettyInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:102 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.okhttp.v2_2.OkHttp2InstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:103 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.play.v2_3.PlayInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:104 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.play.v2_4.PlayInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:106 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.play.v2_6.PlayInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:107 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.playws.v1_0.PlayWsInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:108 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.playws.v2_0.PlayWsInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:108 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.playws.v2_1.PlayWsInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:109 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.servlet.dispatcher.RequestDispatcherInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:116 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.servlet.dispatcher.RequestDispatcherInstrumentationModule javax.servlet.RequestDispatcher=java.lang.String
[opentelemetry.auto.trace 2020-12-16 11:13:56:116 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.servlet.http.HttpServletResponseInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:117 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.spring.data.SpringDataInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:118 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.spring.scheduling.SpringSchedulingInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:119 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.spring.webflux.client.WebfluxClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:120 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.spring.webflux.server.WebfluxServerInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:123 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.springwebmvc.SpringWebMvcInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:125 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.jaxrs.v2_0.JerseyInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:126 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.jaxrs.v2_0.Resteasy30InstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:127 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.jaxrs.v2_0.Resteasy31InstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:128 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.jaxrs.v2_0.JaxRsInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:135 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Making builder for io.opentelemetry.javaagent.instrumentation.jaxrs.v2_0.JaxRsInstrumentationModule javax.ws.rs.container.AsyncResponse=io.opentelemetry.javaagent.shaded.io.opentelemetry.api.trace.Span
[opentelemetry.auto.trace 2020-12-16 11:13:56:136 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.jaxrs.v2_0.JaxRsInstrumentationModule javax.ws.rs.container.AsyncResponse=io.opentelemetry.javaagent.shaded.io.opentelemetry.api.trace.Span
[opentelemetry.auto.trace 2020-12-16 11:13:56:136 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.jaxrs.v2_0.JaxRsInstrumentationModule javax.ws.rs.container.AsyncResponse=io.opentelemetry.javaagent.shaded.io.opentelemetry.api.trace.Span
[opentelemetry.auto.trace 2020-12-16 11:13:56:136 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.javaagent.instrumentation.jaxrs.v2_0.JaxRsInstrumentationModule javax.ws.rs.container.AsyncResponse=io.opentelemetry.javaagent.shaded.io.opentelemetry.api.trace.Span
[opentelemetry.auto.trace 2020-12-16 11:13:56:136 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.jaxrsclient.v2_0.JerseyClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:137 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.javaagent.instrumentation.jaxrsclient.v2_0.ResteasyClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:138 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.instrumentation.hypertrace.servlet.v2_3.Servlet2BodyInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:143 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Skipping builder for io.opentelemetry.instrumentation.hypertrace.servlet.v2_3.Servlet2BodyInstrumentationModule javax.servlet.ServletResponse=java.lang.Integer
[opentelemetry.auto.trace 2020-12-16 11:13:56:143 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.instrumentation.hypertrace.servlet.v3_0.Servlet30BodyInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:144 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.instrumentation.hypertrace.sparkjava.SparkJavaBodyInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:145 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.instrumentation.hypertrace.servlet.v3_1.Servlet31BodyInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:145 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.client.GrpcClientBodyInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:146 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.instrumentation.hypertrace.okhttp.v3_0.OkHttp3BodyInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:147 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.instrumentation.hypertrace.apachehttpclient.v4_0.ApacheClientInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:149 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Loading instrumentation io.opentelemetry.instrumentation.hypertrace.apachehttpclient.v4_0.readall.ApacheClientReadAllInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:149 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.InstrumentationModule - Instrumentation httpclient-readall is disabled
[opentelemetry.auto.trace 2020-12-16 11:13:56:150 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller - Installed 124 instrumenter(s)
[opentelemetry.auto.trace 2020-12-16 11:13:56:477 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for java.util.concurrent.Executors$DelegatedScheduledExecutorService
[opentelemetry.auto.trace 2020-12-16 11:13:56:477 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for java.util.concurrent.Executors$DelegatedScheduledExecutorService
[opentelemetry.auto.trace 2020-12-16 11:13:56:621 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$Future$io$opentelemetry$javaagent$instrumentation$api$concurrent$State, io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$lang$Runnable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State, io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$ForkJoinTask$io$opentelemetry$javaagent$instrumentation$api$concurrent$State, io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$Callable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State]
[opentelemetry.auto.trace 2020-12-16 11:13:56:652 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$ForkJoinTask$io$opentelemetry$javaagent$instrumentation$api$concurrent$State, io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$Future$io$opentelemetry$javaagent$instrumentation$api$concurrent$State, io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$Callable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State, io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$lang$Runnable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State]
[opentelemetry.auto.trace 2020-12-16 11:13:56:751 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:751 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:754 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.ForkJoinTask -- null
[opentelemetry.auto.trace 2020-12-16 11:13:56:765 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:765 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:767 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.ThreadPoolExecutor$Worker -- null
[opentelemetry.auto.trace 2020-12-16 11:13:56:771 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:771 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:772 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.Executors$RunnableAdapter -- null
[opentelemetry.auto.trace 2020-12-16 11:13:56:782 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:782 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:783 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:784 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:785 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask -- null
[opentelemetry.auto.trace 2020-12-16 11:13:56:793 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:793 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:794 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:794 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:796 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.FutureTask -- null
[opentelemetry.auto.trace 2020-12-16 11:13:56:824 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$lang$Runnable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State]
[opentelemetry.auto.trace 2020-12-16 11:13:56:825 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$lang$Runnable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State]
[opentelemetry.auto.trace 2020-12-16 11:13:56:840 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:840 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:841 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:841 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:842 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:842 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:843 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:843 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:845 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:845 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:845 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:845 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:846 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:846 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:847 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:847 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:848 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:848 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:850 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:850 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:852 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:853 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:853 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.ScheduledThreadPoolExecutor -- null
[opentelemetry.auto.trace 2020-12-16 11:13:56:880 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:880 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:881 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.ThreadPoolExecutor -- null
[opentelemetry.auto.trace 2020-12-16 11:13:56:896 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:896 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:897 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:897 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:898 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:898 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:899 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:899 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:900 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:900 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:901 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:901 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:902 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:902 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:902 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:903 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:903 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:904 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:904 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:904 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:905 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:905 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:906 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:906 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:906 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:906 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:907 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:907 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:908 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:908 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:909 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.Executors$DelegatedExecutorService -- null
[opentelemetry.auto.trace 2020-12-16 11:13:56:936 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:937 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:937 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:937 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:938 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:938 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:939 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:939 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:939 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:939 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:940 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:940 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:941 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:941 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:942 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:942 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:942 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:943 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:943 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:943 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:944 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:944 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:945 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:945 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:946 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:946 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:947 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:947 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:947 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.AbstractExecutorService -- null
[opentelemetry.auto.trace 2020-12-16 11:13:56:958 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:56:958 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:56:959 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.opentelemetry.javaagent.shaded.org.hypertrace.shaded.com.blogspot.mydailyjava.weaklockfree.WeakConcurrentMap -- null
[opentelemetry.auto.trace 2020-12-16 11:13:56:960 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlResponse, io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlConnectionInstrumentationModule$HttpUrlState, io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlConnectionTracer, io.opentelemetry.javaagent.instrumentation.httpurlconnection.HeadersInjectAdapter]
[opentelemetry.auto.trace 2020-12-16 11:13:56:963 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$net$HttpURLConnection$io$opentelemetry$javaagent$instrumentation$httpurlconnection$HttpUrlConnectionInstrumentationModule$HttpUrlState]
[opentelemetry.auto.trace 2020-12-16 11:13:56:965 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$net$HttpURLConnection$io$opentelemetry$javaagent$instrumentation$httpurlconnection$HttpUrlConnectionInstrumentationModule$HttpUrlState]
[opentelemetry.auto.trace 2020-12-16 11:13:56:979 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.net.HttpURLConnection -- null
[opentelemetry.auto.trace 2020-12-16 11:13:56:980 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [io.opentelemetry.javaagent.tooling.Constants, io.opentelemetry.javaagent.instrumentation.javaclassloader.ClassLoaderInstrumentation$Holder]
[opentelemetry.auto.trace 2020-12-16 11:13:56:993 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.opentelemetry.javaagent.bootstrap.AgentClassLoader$BootstrapClassLoaderProxy -- null
[opentelemetry.auto.trace 2020-12-16 11:13:57:001 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.opentelemetry.javaagent.bootstrap.AgentClassLoader -- null
[opentelemetry.auto.trace 2020-12-16 11:13:57:002 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamUtils]
[opentelemetry.auto.trace 2020-12-16 11:13:57:009 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed sun.net.www.protocol.jar.JarURLConnection$JarURLInputStream -- null
[opentelemetry.auto.trace 2020-12-16 11:13:57:020 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.lang.ClassLoader -- null
[opentelemetry.auto.trace 2020-12-16 11:13:57:217 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamUtils
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:220 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamUtils
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:221 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamUtils for transformation on classloader null: Cannot resolve type description for io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamUtils
[opentelemetry.auto.trace 2020-12-16 11:13:57:221 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.instrumentation.javaclassloader.ClassLoaderInstrumentation$Holder
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:222 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.instrumentation.javaclassloader.ClassLoaderInstrumentation$Holder
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:223 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.javaagent.instrumentation.javaclassloader.ClassLoaderInstrumentation$Holder for transformation on classloader null: Cannot resolve type description for io.opentelemetry.javaagent.instrumentation.javaclassloader.ClassLoaderInstrumentation$Holder
[opentelemetry.auto.trace 2020-12-16 11:13:57:223 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.tooling.Constants
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:224 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.tooling.Constants
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:225 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.javaagent.tooling.Constants for transformation on classloader null: Cannot resolve type description for io.opentelemetry.javaagent.tooling.Constants
[opentelemetry.auto.trace 2020-12-16 11:13:57:225 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$net$HttpURLConnection$io$opentelemetry$javaagent$instrumentation$httpurlconnection$HttpUrlConnectionInstrumentationModule$HttpUrlState
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:226 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$net$HttpURLConnection$io$opentelemetry$javaagent$instrumentation$httpurlconnection$HttpUrlConnectionInstrumentationModule$HttpUrlState
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:227 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$net$HttpURLConnection$io$opentelemetry$javaagent$instrumentation$httpurlconnection$HttpUrlConnectionInstrumentationModule$HttpUrlState for transformation on classloader null: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$net$HttpURLConnection$io$opentelemetry$javaagent$instrumentation$httpurlconnection$HttpUrlConnectionInstrumentationModule$HttpUrlState
[opentelemetry.auto.trace 2020-12-16 11:13:57:227 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$net$HttpURLConnection$io$opentelemetry$javaagent$instrumentation$httpurlconnection$HttpUrlConnectionInstrumentationModule$HttpUrlState
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:228 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$net$HttpURLConnection$io$opentelemetry$javaagent$instrumentation$httpurlconnection$HttpUrlConnectionInstrumentationModule$HttpUrlState
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:229 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$net$HttpURLConnection$io$opentelemetry$javaagent$instrumentation$httpurlconnection$HttpUrlConnectionInstrumentationModule$HttpUrlState for transformation on classloader null: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$net$HttpURLConnection$io$opentelemetry$javaagent$instrumentation$httpurlconnection$HttpUrlConnectionInstrumentationModule$HttpUrlState
[opentelemetry.auto.trace 2020-12-16 11:13:57:229 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.instrumentation.httpurlconnection.HeadersInjectAdapter
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:230 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.instrumentation.httpurlconnection.HeadersInjectAdapter
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:232 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.javaagent.instrumentation.httpurlconnection.HeadersInjectAdapter for transformation on classloader null: Cannot resolve type description for io.opentelemetry.javaagent.instrumentation.httpurlconnection.HeadersInjectAdapter
[opentelemetry.auto.trace 2020-12-16 11:13:57:233 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlConnectionTracer
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:235 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlConnectionTracer
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:236 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlConnectionTracer for transformation on classloader null: Cannot resolve type description for io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlConnectionTracer
[opentelemetry.auto.trace 2020-12-16 11:13:57:238 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlConnectionInstrumentationModule$HttpUrlState
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:239 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlConnectionInstrumentationModule$HttpUrlState
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:240 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlConnectionInstrumentationModule$HttpUrlState for transformation on classloader null: Cannot resolve type description for io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlConnectionInstrumentationModule$HttpUrlState
[opentelemetry.auto.trace 2020-12-16 11:13:57:241 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlResponse
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:242 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlResponse
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:244 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlResponse for transformation on classloader null: Cannot resolve type description for io.opentelemetry.javaagent.instrumentation.httpurlconnection.HttpUrlResponse
[opentelemetry.auto.trace 2020-12-16 11:13:57:245 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$lang$Runnable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:246 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$lang$Runnable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:248 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$lang$Runnable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State for transformation on classloader null: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$lang$Runnable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
[opentelemetry.auto.trace 2020-12-16 11:13:57:248 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$Callable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:249 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$Callable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:252 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$Callable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State for transformation on classloader null: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$Callable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
[opentelemetry.auto.trace 2020-12-16 11:13:57:252 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$Future$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:253 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$Future$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:254 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$Future$io$opentelemetry$javaagent$instrumentation$api$concurrent$State for transformation on classloader null: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$Future$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
[opentelemetry.auto.trace 2020-12-16 11:13:57:255 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$ForkJoinTask$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:256 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$ForkJoinTask$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:257 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$ForkJoinTask$io$opentelemetry$javaagent$instrumentation$api$concurrent$State for transformation on classloader null: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$java$util$concurrent$ForkJoinTask$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
[opentelemetry.auto.trace 2020-12-16 11:13:57:261 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$Callable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:262 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$Callable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:263 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$Callable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State for transformation on classloader null: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$Callable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
[opentelemetry.auto.trace 2020-12-16 11:13:57:263 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$ForkJoinTask$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:264 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$ForkJoinTask$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:265 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$ForkJoinTask$io$opentelemetry$javaagent$instrumentation$api$concurrent$State for transformation on classloader null: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$ForkJoinTask$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
[opentelemetry.auto.trace 2020-12-16 11:13:57:265 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$lang$Runnable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:266 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$lang$Runnable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:268 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$lang$Runnable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State for transformation on classloader null: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$lang$Runnable$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
[opentelemetry.auto.trace 2020-12-16 11:13:57:268 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$Future$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:269 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher - Instrumentation type matcher unexpected exception: io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamInstrumentationModule
java.lang.IllegalStateException: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$Future$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
	at net.bytebuddy.pool.TypePool$Resolution$Illegal.resolve(TypePool.java:157)
	at io.opentelemetry.javaagent.tooling.bytebuddy.AgentCachingPoolStrategy$CachingResolution.resolve(AgentCachingPoolStrategy.java:274)
	at net.bytebuddy.pool.TypePool$Default$WithLazyResolution$LazyTypeDescription.delegate(TypePool.java:912)
	at net.bytebuddy.description.type.TypeDescription$AbstractBase$OfSimpleType$WithDelegation.getModifiers(TypeDescription.java:8383)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:48)
	at net.bytebuddy.matcher.ModifierMatcher.matches(ModifierMatcher.java:27)
	at net.bytebuddy.matcher.NegatingMatcher.matches(NegatingMatcher.java:46)
	at net.bytebuddy.matcher.ElementMatcher$Junction$Conjunction.matches(ElementMatcher.java:122)
	at io.opentelemetry.javaagent.tooling.bytebuddy.matcher.LoggingFailSafeMatcher.matches(LoggingFailSafeMatcher.java:52)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$ForElementMatchers.matches(AgentBuilder.java:1312)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$RawMatcher$Conjunction.matches(AgentBuilder.java:1163)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Transformation$SimpleMatcher.matches(AgentBuilder.java:9892)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy$Collector.consider(AgentBuilder.java:6980)
	at net.bytebuddy.agent.builder.AgentBuilder$RedefinitionStrategy.apply(AgentBuilder.java:4834)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.doInstall(AgentBuilder.java:9502)
	at net.bytebuddy.agent.builder.AgentBuilder$Default.installOn(AgentBuilder.java:9423)
	at net.bytebuddy.agent.builder.AgentBuilder$Default$Delegator.installOn(AgentBuilder.java:11025)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:163)
	at io.opentelemetry.javaagent.tooling.AgentInstaller.installBytebuddyAgent(AgentInstaller.java:68)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.startAgent(AgentInitializer.java:145)
	at io.opentelemetry.javaagent.bootstrap.AgentInitializer.initialize(AgentInitializer.java:50)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.agentmain(OpenTelemetryAgent.java:64)
	at io.opentelemetry.javaagent.OpenTelemetryAgent.premain(OpenTelemetryAgent.java:51)
	at org.hypertrace.agent.instrument.HypertraceAgent.agentmain(HypertraceAgent.java:63)
	at org.hypertrace.agent.instrument.HypertraceAgent.premain(HypertraceAgent.java:45)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method)
	at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(Unknown Source)
	at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(Unknown Source)
	at java.base/java.lang.reflect.Method.invoke(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndStartAgent(Unknown Source)
	at java.instrument/sun.instrument.InstrumentationImpl.loadClassAndCallPremain(Unknown Source)
[opentelemetry.auto.trace 2020-12-16 11:13:57:269 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Failed to handle io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$Future$io$opentelemetry$javaagent$instrumentation$api$concurrent$State for transformation on classloader null: Cannot resolve type description for io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$java$util$concurrent$Future$io$opentelemetry$javaagent$instrumentation$api$concurrent$State
[opentelemetry.auto.trace 2020-12-16 11:13:57:275 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for io.opentelemetry.javaagent.shaded.org.hypertrace.shaded.com.google.common.util.concurrent.SettableFuture
[opentelemetry.auto.trace 2020-12-16 11:13:57:276 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for io.opentelemetry.javaagent.shaded.org.hypertrace.shaded.com.google.common.util.concurrent.AbstractFuture$TrustedFuture
[opentelemetry.auto.trace 2020-12-16 11:13:57:276 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for io.opentelemetry.javaagent.shaded.org.hypertrace.shaded.com.google.common.util.concurrent.AbstractFuture
[opentelemetry.auto.trace 2020-12-16 11:13:57:285 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:57:285 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:57:287 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.opentelemetry.javaagent.shaded.org.hypertrace.shaded.com.google.common.util.concurrent.AbstractFuture$SetFuture -- null
[opentelemetry.auto.trace 2020-12-16 11:13:57:708 +0000] [main] INFO io.opentelemetry.javaagent.tooling.TracerInstaller - Installed span exporter: io.opentelemetry.exporter.zipkin.ZipkinSpanExporter
[opentelemetry.auto.trace 2020-12-16 11:13:57:710 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.TracerInstaller - No zipkin metric exporter found
[opentelemetry.auto.trace 2020-12-16 11:13:57:712 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.TracerInstaller - No zipkin metric server found
[opentelemetry.auto.trace 2020-12-16 11:13:57:731 +0000] [main] INFO io.opentelemetry.javaagent.tooling.PropagatorsInitializer - Added tracecontext propagator
[opentelemetry.auto.trace 2020-12-16 11:13:57:732 +0000] [main] INFO io.opentelemetry.javaagent.tooling.VersionLogger - opentelemetry-javaagent - version: 0.6.2
[opentelemetry.auto.trace 2020-12-16 11:13:57:733 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.VersionLogger - Running on Java 11.0.8. JVM OpenJDK 64-Bit Server VM - Azul Systems, Inc. - 11.0.8+10-LTS
[opentelemetry.auto.trace 2020-12-16 11:13:57:733 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.TracerInstaller - io.opentelemetry.javaagent.tooling.AgentInstaller loaded on io.opentelemetry.javaagent.bootstrap.AgentClassLoader@292b08d6
[opentelemetry.auto.trace 2020-12-16 11:13:57:952 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:57:953 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:57:955 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.logging.log4j.core.util.DefaultShutdownCallbackRegistry -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:13:58:088 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1 -> [io.opentelemetry.instrumentation.hypertrace.java.inputstream.InputStreamUtils]
[opentelemetry.auto.trace 2020-12-16 11:13:58:098 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.logging.log4j.util.FilteredObjectInputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:13:58:126 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1 -> [io.opentelemetry.javaagent.shaded.instrumentation.log4j.v2_13_2.OpenTelemetryContextDataProvider]
[opentelemetry.auto.trace 2020-12-16 11:13:58:130 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.logging.log4j.core.impl.ThreadContextDataInjector -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:13:58:478 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.logging.log4j.core.appender.rolling.action.DeleteAction -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:13:58:485 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.logging.log4j.core.appender.rolling.action.AbstractPathAction -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:13:58:490 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:58:490 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:58:491 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.logging.log4j.core.appender.rolling.action.AbstractAction -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:13:58:534 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:58:534 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:58:536 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.logging.log4j.core.appender.routing.IdlePurgePolicy -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:13:58:623 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.logging.log4j.core.appender.rolling.action.PosixViewAttributeAction -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:13:58:865 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1 -> [io.opentelemetry.instrumentation.hypertrace.java.outputstream.OutputStreamUtils]
[opentelemetry.auto.trace 2020-12-16 11:13:58:873 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.logging.log4j.core.appender.ConsoleAppender$SystemOutStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:13:58:881 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.logging.log4j.core.appender.ConsoleAppender$SystemErrStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:13:58:890 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.logging.log4j.core.util.CloseShieldOutputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:13:59:243 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.logging.log4j.core.util.Log4jThread -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:13:59:310 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for javax.management.NotificationBroadcasterSupport$1
[opentelemetry.auto.trace 2020-12-16 11:13:59:310 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for javax.management.NotificationBroadcasterSupport$1
[opentelemetry.auto.trace 2020-12-16 11:13:59:442 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:442 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:443 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.logging.log4j.core.LoggerContext$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
2020-12-16 11:13:59.487 [main] INFO  o.h.c.s.PlatformServiceLauncher - Trying to start PlatformService ...
2020-12-16 11:13:59.534 [main] WARN  o.h.c.s.c.ConfigUtils - Cannot find Property: bootstrap.config.uri in neither JVM parameter nor OS environment
2020-12-16 11:13:59.543 [main] WARN  o.h.c.s.c.ConfigUtils - Cannot find Property: cluster.name in neither JVM parameter nor OS environment
2020-12-16 11:13:59.543 [main] WARN  o.h.c.s.c.ConfigUtils - Cannot find Property: pod.name in neither JVM parameter nor OS environment
2020-12-16 11:13:59.544 [main] WARN  o.h.c.s.c.ConfigUtils - Cannot find Property: container.name in neither JVM parameter nor OS environment
2020-12-16 11:13:59.544 [main] INFO  o.h.c.s.c.DirectoryBasedConfigClient - Trying to compile configs under directory: /app/resources/configs
2020-12-16 11:13:59.644 [main] INFO  o.h.c.s.c.DirectoryBasedConfigClient - Loading config from path: /app/resources/configs/common/application.conf
2020-12-16 11:13:59.790 [main] INFO  o.h.c.s.c.DirectoryBasedConfigClient - Overrided Configs are listed below:
2020-12-16 11:13:59.791 [main] INFO  o.h.c.s.c.ConfigUtils - main.class = Unquoted("org.hypertrace.entity.service.EntityService")
2020-12-16 11:13:59.793 [main] INFO  o.h.c.s.c.ConfigUtils - metrics.reporter.names = [Quoted("prometheus")]
2020-12-16 11:13:59.795 [main] INFO  o.h.c.s.c.ConfigUtils - entity.service.config.entity-service.dataStoreType = Unquoted("mongo")
2020-12-16 11:13:59.795 [main] INFO  o.h.c.s.c.ConfigUtils - service.admin.port = ConfigInt(50062)
2020-12-16 11:13:59.795 [main] INFO  o.h.c.s.c.ConfigUtils - entity.service.attributeMap = [{name=Quoted("API.id"), subDocPath=Quoted("entityId"), scope=Quoted("API")}, {subDocPath=Quoted("entityName"), name=Quoted("API.name"), scope=Quoted("API")}, {name=Quoted("API.apiType"), scope=Quoted("API"), subDocPath=Quoted("attributes.API_TYPE")}, {name=Quoted("API.httpMethod"), subDocPath=Quoted("attributes.http_method"), scope=Quoted("API")}, {name=Quoted("API.httpUrl"), subDocPath=Quoted("attributes.API_NAME"), scope=Quoted("API")}, {subDocPath=Quoted("attributes.SERVICE_ID"), name=Quoted("API.serviceId"), scope=Quoted("API")}, {name=Quoted("API.createdTime"), subDocPath=Quoted("createdTime"), scope=Quoted("API")}, {subDocPath=Quoted("attributes.api_discovery_state"), name=Quoted("API.apiDiscoveryState"), scope=Quoted("API")}, {subDocPath=Quoted("entityId"), name=Quoted("SERVICE.id"), scope=Quoted("SERVICE")}, {subDocPath=Quoted("entityName"), scope=Quoted("SERVICE"), name=Quoted("SERVICE.name")}]
2020-12-16 11:13:59.796 [main] INFO  o.h.c.s.c.ConfigUtils - entity.service.config.entity-service.mongo.port = ConfigInt(27017)
2020-12-16 11:13:59.796 [main] INFO  o.h.c.s.c.ConfigUtils - metrics.reporter.console.reportInterval = ConfigInt(30)
2020-12-16 11:13:59.797 [main] INFO  o.h.c.s.c.ConfigUtils - service.port = ConfigInt(50061)
2020-12-16 11:13:59.797 [main] INFO  o.h.c.s.c.ConfigUtils - entity.service.config.entity-service.mongo.host = Unquoted("localhost")
2020-12-16 11:13:59.797 [main] INFO  o.h.c.s.c.ConfigUtils - metrics.reporter.prefix = Unquoted("org.hypertrace.entity.service.EntityService")
2020-12-16 11:13:59.797 [main] INFO  o.h.c.s.c.ConfigUtils - service.name = Unquoted("entity-service")
[opentelemetry.auto.trace 2020-12-16 11:13:59:818 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for java.util.concurrent.CompletableFuture
[opentelemetry.auto.trace 2020-12-16 11:13:59:831 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.CompletableFuture -- null
[opentelemetry.auto.trace 2020-12-16 11:13:59:848 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:848 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.ForkJoinTask -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:849 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:849 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.ForkJoinTask -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:850 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:850 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:851 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:851 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.ForkJoinTask -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:851 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:852 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:852 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:852 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:853 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:853 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:854 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:854 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:855 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:855 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:856 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:856 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:856 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:856 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:857 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:857 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:859 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.ForkJoinPool -- null
[opentelemetry.auto.trace 2020-12-16 11:13:59:862 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for java.util.concurrent.CompletableFuture$Completion
[opentelemetry.auto.trace 2020-12-16 11:13:59:866 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:866 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:867 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:867 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.ForkJoinTask -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:867 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:867 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:868 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:13:59:868 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:13:59:869 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.CompletableFuture$Completion -- null
2020-12-16 11:13:59.871 [main] WARN  o.h.c.s.c.ConfigUtils - Cannot find Property: cluster.name in neither JVM parameter nor OS environment
2020-12-16 11:13:59.871 [main] WARN  o.h.c.s.c.ConfigUtils - Cannot find Property: pod.name in neither JVM parameter nor OS environment
2020-12-16 11:13:59.871 [main] WARN  o.h.c.s.c.ConfigUtils - Cannot find Property: container.name in neither JVM parameter nor OS environment
2020-12-16 11:13:59.872 [main] INFO  o.h.c.s.c.DirectoryBasedConfigClient - Trying to compile configs under directory: /app/resources/configs
2020-12-16 11:13:59.872 [main] INFO  o.h.c.s.c.DirectoryBasedConfigClient - Loading config from path: /app/resources/configs/common/application.conf
2020-12-16 11:13:59.878 [main] INFO  o.h.c.s.c.DirectoryBasedConfigClient - Overrided Configs are listed below:
2020-12-16 11:13:59.879 [main] INFO  o.h.c.s.c.ConfigUtils - main.class = Unquoted("org.hypertrace.entity.service.EntityService")
2020-12-16 11:13:59.879 [main] INFO  o.h.c.s.c.ConfigUtils - metrics.reporter.names = [Quoted("prometheus")]
2020-12-16 11:13:59.879 [main] INFO  o.h.c.s.c.ConfigUtils - entity.service.config.entity-service.dataStoreType = Unquoted("mongo")
2020-12-16 11:13:59.880 [main] INFO  o.h.c.s.c.ConfigUtils - service.admin.port = ConfigInt(50062)
2020-12-16 11:13:59.880 [main] INFO  o.h.c.s.c.ConfigUtils - entity.service.attributeMap = [{name=Quoted("API.id"), subDocPath=Quoted("entityId"), scope=Quoted("API")}, {subDocPath=Quoted("entityName"), name=Quoted("API.name"), scope=Quoted("API")}, {name=Quoted("API.apiType"), scope=Quoted("API"), subDocPath=Quoted("attributes.API_TYPE")}, {name=Quoted("API.httpMethod"), subDocPath=Quoted("attributes.http_method"), scope=Quoted("API")}, {name=Quoted("API.httpUrl"), subDocPath=Quoted("attributes.API_NAME"), scope=Quoted("API")}, {subDocPath=Quoted("attributes.SERVICE_ID"), name=Quoted("API.serviceId"), scope=Quoted("API")}, {name=Quoted("API.createdTime"), subDocPath=Quoted("createdTime"), scope=Quoted("API")}, {subDocPath=Quoted("attributes.api_discovery_state"), name=Quoted("API.apiDiscoveryState"), scope=Quoted("API")}, {subDocPath=Quoted("entityId"), name=Quoted("SERVICE.id"), scope=Quoted("SERVICE")}, {subDocPath=Quoted("entityName"), scope=Quoted("SERVICE"), name=Quoted("SERVICE.name")}]
2020-12-16 11:13:59.881 [main] INFO  o.h.c.s.c.ConfigUtils - entity.service.config.entity-service.mongo.port = ConfigInt(27017)
2020-12-16 11:13:59.881 [main] INFO  o.h.c.s.c.ConfigUtils - metrics.reporter.console.reportInterval = ConfigInt(30)
2020-12-16 11:13:59.882 [main] INFO  o.h.c.s.c.ConfigUtils - service.port = ConfigInt(50061)
2020-12-16 11:13:59.882 [main] INFO  o.h.c.s.c.ConfigUtils - entity.service.config.entity-service.mongo.host = Unquoted("localhost")
2020-12-16 11:13:59.882 [main] INFO  o.h.c.s.c.ConfigUtils - metrics.reporter.prefix = Unquoted("org.hypertrace.entity.service.EntityService")
2020-12-16 11:13:59.882 [main] INFO  o.h.c.s.c.ConfigUtils - service.name = Unquoted("entity-service")
2020-12-16 11:13:59.883 [main] INFO  o.h.c.s.PlatformService - Starting the service with this config Config(SimpleConfigObject({"entity":{"service":{"attributeMap":[{"name":"API.id","scope":"API","subDocPath":"entityId"},{"name":"API.name","scope":"API","subDocPath":"entityName"},{"name":"API.apiType","scope":"API","subDocPath":"attributes.API_TYPE"},{"name":"API.httpMethod","scope":"API","subDocPath":"attributes.http_method"},{"name":"API.httpUrl","scope":"API","subDocPath":"attributes.API_NAME"},{"name":"API.serviceId","scope":"API","subDocPath":"attributes.SERVICE_ID"},{"name":"API.createdTime","scope":"API","subDocPath":"createdTime"},{"name":"API.apiDiscoveryState","scope":"API","subDocPath":"attributes.api_discovery_state"},{"name":"SERVICE.id","scope":"SERVICE","subDocPath":"entityId"},{"name":"SERVICE.name","scope":"SERVICE","subDocPath":"entityName"}],"config":{"entity-service":{"dataStoreType":"mongo","mongo":{"host":"localhost","port":27017}}}}},"main":{"class":"org.hypertrace.entity.service.EntityService"},"metrics":{"reporter":{"console":{"reportInterval":30},"names":["prometheus"],"prefix":"org.hypertrace.entity.service.EntityService"}},"service":{"admin":{"port":50062},"name":"entity-service","port":50061}}))
2020-12-16 11:13:59.983 [main] INFO  o.h.c.s.m.PlatformMetricsRegistry - Trying to init PrometheusReporter
2020-12-16 11:14:00.062 [main] INFO  o.h.c.s.m.PlatformMetricsRegistry - Setting default tags for all metrics to: {}
2020-12-16 11:14:00.256 [main] INFO  o.h.e.s.EntityServiceConfig - Config(SimpleConfigObject({"entity-service":{"dataStoreType":"mongo","mongo":{"host":"localhost","port":27017}}}))
2020-12-16 11:14:00.257 [main] INFO  o.h.e.s.EntityServiceConfig - Config key mongo.host
2020-12-16 11:14:00.257 [main] INFO  o.h.e.s.EntityServiceConfig - Config key mongo.port
2020-12-16 11:14:00.257 [main] INFO  o.h.e.s.EntityServiceConfig - Config key dataStoreType
2020-12-16 11:14:00.643 [main] INFO  o.m.d.cluster - Cluster created with settings {hosts=[localhost:27017], mode=SINGLE, requiredClusterType=UNKNOWN, serverSelectionTimeout='30000 ms'}
[opentelemetry.auto.trace 2020-12-16 11:14:00:682 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.bson.io.BasicOutputBuffer -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:00:688 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.bson.io.OutputBuffer -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:00:795 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:00:795 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:00:797 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:00:803 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:00:803 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:00:804 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed com.mongodb.internal.connection.DefaultServerMonitor$RoundTripTimeRunnable -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
2020-12-16 11:14:00.865 [cluster-ClusterId{value='5fd9ebf8f7e9fe74e1c37903', description='null'}-localhost:27017] INFO  o.m.d.cluster - Exception in monitor thread while connecting to server localhost:27017
com.mongodb.MongoSocketOpenException: Exception opening socket
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:70) ~[mongodb-driver-core-4.1.1.jar:?]
	at com.mongodb.internal.connection.InternalStreamConnection.open(InternalStreamConnection.java:143) ~[mongodb-driver-core-4.1.1.jar:?]
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.lookupServerDescription(DefaultServerMonitor.java:188) [mongodb-driver-core-4.1.1.jar:?]
	at com.mongodb.internal.connection.DefaultServerMonitor$ServerMonitorRunnable.run(DefaultServerMonitor.java:144) [mongodb-driver-core-4.1.1.jar:?]
	at java.lang.Thread.run(Unknown Source) [?:?]
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source) ~[?:?]
	at java.net.SocksSocketImpl.connect(Unknown Source) ~[?:?]
	at java.net.Socket.connect(Unknown Source) ~[?:?]
	at com.mongodb.internal.connection.SocketStreamHelper.initialize(SocketStreamHelper.java:78) ~[mongodb-driver-core-4.1.1.jar:?]
	at com.mongodb.internal.connection.SocketStream.initializeSocket(SocketStream.java:79) ~[mongodb-driver-core-4.1.1.jar:?]
	at com.mongodb.internal.connection.SocketStream.open(SocketStream.java:65) ~[mongodb-driver-core-4.1.1.jar:?]
	... 4 more
[opentelemetry.auto.trace 2020-12-16 11:14:00:896 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1 -> [io.opentelemetry.javaagent.shaded.instrumentation.grpc.v1_5.client.TracingClientInterceptor, io.opentelemetry.javaagent.shaded.instrumentation.grpc.v1_5.client.TracingClientInterceptor$TracingClientCall, io.opentelemetry.javaagent.shaded.instrumentation.grpc.v1_5.common.GrpcHelper, io.opentelemetry.javaagent.shaded.instrumentation.grpc.v1_5.client.GrpcClientTracer, io.opentelemetry.javaagent.shaded.instrumentation.grpc.v1_5.client.TracingClientInterceptor$TracingClientCallListener, io.opentelemetry.javaagent.shaded.instrumentation.grpc.v1_5.client.GrpcInjectAdapter, io.opentelemetry.javaagent.shaded.instrumentation.grpc.v1_5.server.TracingServerInterceptor, io.opentelemetry.javaagent.shaded.instrumentation.grpc.v1_5.server.TracingServerInterceptor$TracingServerCallListener, io.opentelemetry.javaagent.shaded.instrumentation.grpc.v1_5.server.TracingServerInterceptor$TracingServerCall, io.opentelemetry.javaagent.shaded.instrumentation.grpc.v1_5.server.GrpcServerTracer, io.opentelemetry.javaagent.shaded.instrumentation.grpc.v1_5.server.GrpcExtractAdapter]
[opentelemetry.auto.trace 2020-12-16 11:14:00:904 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1 -> [io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.client.GrpcClientInterceptor, io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.GrpcInstrumentationName, io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.client.GrpcClientInterceptor$TracingClientCall, io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.client.GrpcClientInterceptor$TracingClientCallListener, io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.GrpcSpanDecorator, io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.GrpcSemanticAttributes]
[opentelemetry.auto.trace 2020-12-16 11:14:00:921 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.ManagedChannelImplBuilder -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:00:938 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1 -> [io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.GrpcSemanticAttributes]
[opentelemetry.auto.trace 2020-12-16 11:14:00:946 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.netty.Utils -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:150 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed com.google.common.io.BaseEncoding$StandardBaseEncoding$2 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:162 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed com.google.common.io.BaseEncoding$StandardBaseEncoding$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:525 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.FastThreadLocalThread -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:544 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.nio.NioEventLoopGroup -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:558 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.MultithreadEventLoopGroup -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:571 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.MultithreadEventExecutorGroup -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:582 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:582 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:582 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:582 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:583 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:583 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:584 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:584 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:584 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:584 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:585 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:585 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:586 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:586 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:586 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:586 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:587 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:587 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:588 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:588 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:589 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:589 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:589 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:589 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:590 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:590 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:590 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:591 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:591 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:591 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:592 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:592 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:593 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:593 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:593 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:593 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:594 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:594 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:594 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.AbstractEventExecutorGroup -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:610 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for io.netty.util.concurrent.ThreadPerTaskExecutor
[opentelemetry.auto.trace 2020-12-16 11:14:01:610 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for io.netty.util.concurrent.ThreadPerTaskExecutor
[opentelemetry.auto.trace 2020-12-16 11:14:01:614 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for io.netty.util.concurrent.DefaultPromise
[opentelemetry.auto.trace 2020-12-16 11:14:01:621 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.DefaultPromise -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:622 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for io.netty.util.concurrent.AbstractFuture
[opentelemetry.auto.trace 2020-12-16 11:14:01:625 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.AbstractFuture -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:648 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:648 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:649 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:649 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:650 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.GlobalEventExecutor -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:663 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:663 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:664 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:664 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:665 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:665 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:665 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:666 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:667 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.AbstractScheduledEventExecutor -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:679 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:679 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:680 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:680 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:680 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:680 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:681 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:681 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:682 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:682 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:682 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:682 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:683 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:683 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:683 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:683 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:684 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:684 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:685 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:685 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:686 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.AbstractEventExecutor -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:697 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:697 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:697 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.AbstractScheduledEventExecutor$2 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:707 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:707 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:709 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:709 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:710 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.ScheduledFutureTask -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:712 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for io.netty.util.concurrent.PromiseTask
[opentelemetry.auto.trace 2020-12-16 11:14:01:718 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:718 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:719 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.PromiseTask -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:724 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:724 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:725 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.PromiseTask$SentinelRunnable -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:729 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:729 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:729 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.GlobalEventExecutor$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:733 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:733 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:734 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.GlobalEventExecutor$TaskRunner -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:740 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.FailedFuture -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:745 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:745 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Future -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:745 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.CompleteFuture -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:786 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.nio.NioEventLoop -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:804 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.SingleThreadEventLoop -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:822 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:822 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:824 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:824 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:825 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:825 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:826 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:826 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:826 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:826 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:827 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:827 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:828 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:828 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:828 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:844 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:845 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:845 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:846 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:846 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.util.concurrent.Callable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:848 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.SingleThreadEventExecutor -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:862 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:01:862 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:01:863 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.SingleThreadEventExecutor$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:01:948 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for io.netty.util.internal.ThreadExecutorMap$1
[opentelemetry.auto.trace 2020-12-16 11:14:01:948 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for io.netty.util.internal.ThreadExecutorMap$1
[opentelemetry.auto.trace 2020-12-16 11:14:01:981 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for io.grpc.SynchronizationContext
[opentelemetry.auto.trace 2020-12-16 11:14:01:981 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for io.grpc.SynchronizationContext
[opentelemetry.auto.trace 2020-12-16 11:14:02:017 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor
[opentelemetry.auto.trace 2020-12-16 11:14:02:018 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for io.grpc.internal.ManagedChannelImpl$RestrictedScheduledExecutor
[opentelemetry.auto.trace 2020-12-16 11:14:02:075 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for io.grpc.internal.ManagedChannelImpl$3
[opentelemetry.auto.trace 2020-12-16 11:14:02:075 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for io.grpc.internal.ManagedChannelImpl$3
[opentelemetry.auto.trace 2020-12-16 11:14:02:113 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:02:113 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:02:114 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.DelayedClientTransport$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:02:118 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:02:118 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:02:119 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.DelayedClientTransport$2 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:02:123 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:02:123 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:02:124 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.DelayedClientTransport$3 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:02:145 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:02:145 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:02:146 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.ManagedChannelImpl$IdleModeTimer -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:02:174 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for java.util.concurrent.CompletableFuture$MinimalStage
[opentelemetry.auto.trace 2020-12-16 11:14:02:183 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.CompletableFuture$MinimalStage -- null
[opentelemetry.auto.trace 2020-12-16 11:14:02:185 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for java.util.concurrent.CompletableFuture$UniRelay
[opentelemetry.auto.trace 2020-12-16 11:14:02:189 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.CompletableFuture$UniRelay -- null
[opentelemetry.auto.trace 2020-12-16 11:14:02:189 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for java.util.concurrent.CompletableFuture$UniCompletion
[opentelemetry.auto.trace 2020-12-16 11:14:02:193 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.CompletableFuture$UniCompletion -- null
[opentelemetry.auto.trace 2020-12-16 11:14:02:196 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for java.util.concurrent.CompletableFuture$UniRun
[opentelemetry.auto.trace 2020-12-16 11:14:02:200 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed java.util.concurrent.CompletableFuture$UniRun -- null
[opentelemetry.auto.trace 2020-12-16 11:14:02:208 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1 -> [io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.server.GrpcServerInterceptor, io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.server.GrpcServerInterceptor$TracingServerCallListener, io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.GrpcInstrumentationName, io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.GrpcSpanDecorator, io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.server.GrpcServerInterceptor$TracingServerCall, io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.server.NoopServerCallListener, io.opentelemetry.instrumentation.hypertrace.grpc.v1_5.GrpcSemanticAttributes]
[opentelemetry.auto.trace 2020-12-16 11:14:02:214 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.ServerBuilder -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:02:231 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.netty.NettyServerBuilder -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:02:237 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.AbstractServerImplBuilder -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:02:245 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.ServerImplBuilder -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:02:367 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed com.fasterxml.jackson.core.util.ByteArrayBuilder -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:02:543 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed com.fasterxml.jackson.core.io.DataOutputAsStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:03:209 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed com.google.protobuf.AbstractMessageLite$Builder$LimitedInputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:03:245 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.protobuf.lite.ProtoInputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
2020-12-16 11:14:03.685 [main] INFO  o.h.c.s.PlatformService - Service - entity-service is initialized.
2020-12-16 11:14:03.685 [main] INFO  o.h.c.s.PlatformService - Trying to start service - entity-service...
[opentelemetry.auto.trace 2020-12-16 11:14:03:697 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1 -> [io.opentelemetry.javaagent.instrumentation.servlet.v3_0.TagSettingAsyncListener, io.opentelemetry.javaagent.shaded.instrumentation.servlet.ServletHttpServerTracer, io.opentelemetry.javaagent.shaded.instrumentation.servlet.HttpServletRequestGetter, io.opentelemetry.javaagent.instrumentation.servlet.v3_0.Servlet3HttpServerTracer, io.opentelemetry.javaagent.instrumentation.jetty.JettyHttpServerTracer]
[opentelemetry.auto.trace 2020-12-16 11:14:03:710 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.server.Server -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:03:721 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.server.handler.AbstractHandlerContainer -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:03:729 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.server.handler.AbstractHandler -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
2020-12-16 11:14:03.775 [main] INFO  o.e.j.u.log - Logging initialized @9581ms to org.eclipse.jetty.util.log.Slf4jLog
[opentelemetry.auto.trace 2020-12-16 11:14:03:799 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:03:799 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:03:801 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.util.thread.QueuedThreadPool -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:03:807 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for org.eclipse.jetty.util.thread.TryExecutor$1
[opentelemetry.auto.trace 2020-12-16 11:14:03:807 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for org.eclipse.jetty.util.thread.TryExecutor$1
[opentelemetry.auto.trace 2020-12-16 11:14:03:816 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:03:816 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:03:817 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.util.thread.QueuedThreadPool$Runner -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:03:839 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:03:839 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:03:840 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.util.thread.ReservedThreadExecutor -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:03:923 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:03:923 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:03:924 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.server.HttpConnection -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:013 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:013 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:016 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.server.HttpChannel -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:082 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.servlet.ServletContextHandler -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:127 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.server.session.SessionHandler -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:140 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.security.SecurityHandler -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:154 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.server.handler.gzip.GzipHandler -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:210 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.security.ConstraintSecurityHandler -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:266 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1 -> [io.opentelemetry.javaagent.instrumentation.servlet.v3_0.TagSettingAsyncListener, io.opentelemetry.javaagent.shaded.instrumentation.servlet.ServletHttpServerTracer, io.opentelemetry.javaagent.shaded.instrumentation.servlet.HttpServletRequestGetter, io.opentelemetry.javaagent.instrumentation.servlet.v3_0.Servlet3HttpServerTracer]
[opentelemetry.auto.trace 2020-12-16 11:14:04:268 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1 -> [io.opentelemetry.instrumentation.hypertrace.servlet.common.ServletSpanDecorator, io.opentelemetry.instrumentation.hypertrace.servlet.v3_1.BodyCaptureAsyncListener, io.opentelemetry.instrumentation.hypertrace.servlet.v3_1.Servlet31InstrumentationName, io.opentelemetry.instrumentation.hypertrace.servlet.v3_1.BufferingHttpServletRequest, io.opentelemetry.instrumentation.hypertrace.servlet.v3_1.BufferingHttpServletResponse, io.opentelemetry.instrumentation.hypertrace.servlet.common.CharBufferData, io.opentelemetry.instrumentation.hypertrace.servlet.v3_1.BufferingHttpServletResponse$BufferingServletOutputStream, io.opentelemetry.instrumentation.hypertrace.servlet.common.BufferedWriterWrapper, io.opentelemetry.instrumentation.hypertrace.servlet.common.ByteBufferData, io.opentelemetry.instrumentation.hypertrace.servlet.common.BufferedReaderWrapper, io.opentelemetry.instrumentation.hypertrace.servlet.v3_1.BufferingHttpServletRequest$ServletInputStreamWrapper]
[opentelemetry.auto.trace 2020-12-16 11:14:04:280 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.hypertrace.core.serviceframework.metrics.MetricsServlet -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:291 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed javax.servlet.http.HttpServlet -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:322 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.hypertrace.core.serviceframework.service.servlets.HealthCheckServlet -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:328 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed com.codahale.metrics.servlets.ThreadDumpServlet -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:334 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed com.codahale.metrics.servlets.CpuProfileServlet -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:340 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.hypertrace.core.serviceframework.service.servlets.JVMDiagnosticServlet -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
2020-12-16 11:14:04.346 [Thread-1] INFO  o.h.e.s.EntityService - Starting Entity Data Service
[opentelemetry.auto.trace 2020-12-16 11:14:04:362 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.server.handler.ErrorHandler -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:369 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.io.ByteBufferOutputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:378 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:378 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:379 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.util.thread.ShutdownThread -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
2020-12-16 11:14:04.384 [main] INFO  o.e.j.s.Server - jetty-9.4.35.v20201120; built: 2020-11-20T21:17:03.964Z; git: bdc54f03a5e0a7e280fab27f55c3c75ee8da89fb; jvm 11.0.8+10-LTS
[opentelemetry.auto.trace 2020-12-16 11:14:04:424 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:425 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:425 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.util.thread.ReservedThreadExecutor$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:464 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:464 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:466 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.buffer.PooledByteBufAllocator$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:478 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.servlet.ServletHandler$Default404Servlet -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
2020-12-16 11:14:04.507 [main] INFO  o.e.j.s.h.ContextHandler - Started o.e.j.s.ServletContextHandler@4b37b01e{/,null,AVAILABLE}
[opentelemetry.auto.trace 2020-12-16 11:14:04:534 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:535 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:540 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.util.thread.strategy.EatWhatYouKill -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:548 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:549 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:549 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper -- null
[opentelemetry.auto.trace 2020-12-16 11:14:04:550 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.ManagedSelector$$Lambda$318/0x0000000800634c40@50e7d8ba
[opentelemetry.auto.trace 2020-12-16 11:14:04:565 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.ManagedSelector$$Lambda$318/0x0000000800634c40@672ba9cc
[opentelemetry.auto.trace 2020-12-16 11:14:04:566 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for io.netty.channel.VoidChannelPromise
[opentelemetry.auto.trace 2020-12-16 11:14:04:568 +0000] [main] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.ManagedSelector$$Lambda$318/0x0000000800634c40@7bd6c35e
[opentelemetry.auto.trace 2020-12-16 11:14:04:573 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.VoidChannelPromise -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:578 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for io.netty.channel.AbstractChannel$CloseFuture
[opentelemetry.auto.trace 2020-12-16 11:14:04:581 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:581 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:582 +0000] [main] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.server.AbstractConnector$Acceptor -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
2020-12-16 11:14:04.584 [main] INFO  o.e.j.s.AbstractConnector - Started ServerConnector@74597c37{HTTP/1.1, (http/1.1)}{0.0.0.0:50062}
2020-12-16 11:14:04.584 [main] INFO  o.e.j.s.Server - Started @10394ms
2020-12-16 11:14:04.584 [main] INFO  o.h.c.s.PlatformService - Started admin service on port: 50062.
2020-12-16 11:14:04.584 [main] INFO  o.h.c.s.PlatformService - Service - entity-service is started.
[opentelemetry.auto.trace 2020-12-16 11:14:04:586 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.AbstractChannel$CloseFuture -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:588 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for io.netty.channel.DefaultChannelPromise
[opentelemetry.auto.trace 2020-12-16 11:14:04:595 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.DefaultChannelPromise -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:597 +0000] [qtp1557855053-24-acceptor-0@1dbf74e4-ServerConnector@74597c37{HTTP/1.1, (http/1.1)}{0.0.0.0:50062}] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:597 +0000] [qtp1557855053-24-acceptor-0@1dbf74e4-ServerConnector@74597c37{HTTP/1.1, (http/1.1)}{0.0.0.0:50062}] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:598 +0000] [qtp1557855053-24-acceptor-0@1dbf74e4-ServerConnector@74597c37{HTTP/1.1, (http/1.1)}{0.0.0.0:50062}] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.io.ManagedSelector$Accept -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:605 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:605 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:606 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.io.ManagedSelector$DestroyEndPoint -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:611 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:611 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:613 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.io.ManagedSelector$CreateEndPoint -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:622 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:622 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:623 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.io.ManagedSelector$Connect -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:659 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1 -> [io.opentelemetry.javaagent.instrumentation.netty.v4_1.client.NettyHttpClientTracer, io.opentelemetry.javaagent.instrumentation.netty.v4_1.AttributeKeys, io.opentelemetry.javaagent.instrumentation.netty.v4_1.client.NettyResponseInjectAdapter, io.opentelemetry.javaagent.instrumentation.netty.v4_1.server.HttpServerTracingHandler, io.opentelemetry.javaagent.instrumentation.netty.v4_1.server.HttpServerRequestTracingHandler, io.opentelemetry.javaagent.instrumentation.netty.v4_1.server.HttpServerResponseTracingHandler, io.opentelemetry.javaagent.instrumentation.netty.v4_1.client.HttpClientRequestTracingHandler, io.opentelemetry.javaagent.instrumentation.netty.v4_1.client.HttpClientResponseTracingHandler, io.opentelemetry.javaagent.instrumentation.netty.v4_1.client.HttpClientTracingHandler, io.opentelemetry.javaagent.instrumentation.netty.v4_1.server.NettyHttpServerTracer, io.opentelemetry.javaagent.instrumentation.netty.v4_1.server.NettyRequestExtractAdapter]
[opentelemetry.auto.trace 2020-12-16 11:14:04:674 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:674 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:675 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.io.ChannelEndPoint$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:678 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.DefaultChannelPipeline -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:679 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.io.ChannelEndPoint$RunnableCloseable -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:683 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.io.ChannelEndPoint$RunnableTask -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:685 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.DefaultChannelPipeline$PendingHandlerCallback -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:687 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:687 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:688 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.io.ChannelEndPoint$2 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:689 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:689 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:690 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.DefaultChannelPipeline$PendingHandlerAddedTask -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:693 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:693 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:694 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.io.ChannelEndPoint$3 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:695 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:695 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@209ddec1
[opentelemetry.auto.trace 2020-12-16 11:14:04:695 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:696 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.DefaultChannelPipeline$PendingHandlerRemovedTask -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:741 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.server.HttpChannelOverHttp -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:745 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for io.netty.channel.SucceededChannelFuture
[opentelemetry.auto.trace 2020-12-16 11:14:04:750 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.SucceededChannelFuture -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:751 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for io.netty.channel.CompleteChannelFuture
[opentelemetry.auto.trace 2020-12-16 11:14:04:755 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.CompleteChannelFuture -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:761 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.VoidChannelPromise$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:778 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:778 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:779 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.nio.AbstractNioChannel$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:783 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:783 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:785 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.server.HttpInput -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:795 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.server.HttpInputOverHTTP -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:807 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:807 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:809 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.server.AsyncContextEvent -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:861 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:861 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:862 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.AbstractChannel$AbstractUnsafe$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:870 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextAccessor$javax$servlet$ServletResponse$java$lang$Integer]
[opentelemetry.auto.trace 2020-12-16 11:14:04:871 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:871 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:872 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader <bootstrap> -> [io.opentelemetry.javaagent.bootstrap.instrumentation.context.FieldBackedProvider$ContextStore$javax$servlet$ServletResponse$java$lang$Integer]
[opentelemetry.auto.trace 2020-12-16 11:14:04:874 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.SingleThreadEventExecutor$4 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:876 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1 -> [io.opentelemetry.javaagent.instrumentation.servlet.http.HttpServletResponseTracer]
[opentelemetry.auto.trace 2020-12-16 11:14:04:879 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:879 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:880 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.internal.ThreadExecutorMap$2 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:883 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:883 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:884 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.FastThreadLocalRunnable -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:888 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise
[opentelemetry.auto.trace 2020-12-16 11:14:04:890 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.server.Response -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:894 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.bootstrap.AbstractBootstrap$PendingRegistrationPromise -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:901 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.bootstrap.AbstractBootstrap$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:905 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:906 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:906 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.bootstrap.ServerBootstrap$1$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:910 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:910 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:911 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.server.HttpOutput -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:919 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:919 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:920 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.bootstrap.AbstractBootstrap$2 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:927 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:927 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:928 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:932 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:932 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:933 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.AbstractChannel$AbstractUnsafe$2 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:944 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:944 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:944 +0000] [Thread-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.netty.NettyServer$2 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:946 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.ChannelFutureListener$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:951 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.ChannelFutureListener$2 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:955 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.ChannelFutureListener$3 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:04:984 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:04:984 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:04:985 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.util.thread.ReservedThreadExecutor$ReservedThread -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:05:040 +0000] [qtp1557855053-27] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.server.ServletResponseHttpWrapper -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:05:188 +0000] [qtp1557855053-27] INFO org.hypertrace.agent.core.HypertraceConfig - Config loaded: {"serviceName":"ht-entity-service","reporting":{"endpoint":"http://host.docker.internal:9411/api/v2/spans","opa":{"endpoint":"http://opa.traceableai:8181/","pollPeriodSeconds":30}},"dataCapture":{"httpHeaders":{"request":true,"response":true},"httpBody":{"request":true,"response":true},"rpcMetadata":{"request":true,"response":true},"rpcBody":{"request":true,"response":true}},"propagationFormats":["TRACECONTEXT"]}
[opentelemetry.auto.trace 2020-12-16 11:14:07:295 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@11531e43
[opentelemetry.auto.trace 2020-12-16 11:14:07:768 +0000] [OkHttp http://host.docker.internal:9411/...] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task okhttp3.internal.connection.RealConnectionPool$$Lambda$90/0x00000008002cb840@8df0c
[opentelemetry.auto.trace 2020-12-16 11:14:09:376 +0000] [qtp1557855053-23] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@3c529ed0
[opentelemetry.auto.trace 2020-12-16 11:14:11:457 +0000] [qtp1557855053-21] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@89ebcf
[opentelemetry.auto.trace 2020-12-16 11:14:13:536 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@6e28a2a5
[opentelemetry.auto.trace 2020-12-16 11:14:15:610 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@5401db53
[opentelemetry.auto.trace 2020-12-16 11:14:17:692 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@73b23c3f
[opentelemetry.auto.trace 2020-12-16 11:14:19:765 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@65695882
[opentelemetry.auto.trace 2020-12-16 11:14:21:840 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@7b00c446
[opentelemetry.auto.trace 2020-12-16 11:14:23:919 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@2da8c279
[opentelemetry.auto.trace 2020-12-16 11:14:25:993 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@4351bb2c
[opentelemetry.auto.trace 2020-12-16 11:14:27:695 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@7b4702c6
[opentelemetry.auto.trace 2020-12-16 11:14:28:067 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@7810965e
[opentelemetry.auto.trace 2020-12-16 11:14:28:706 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@1635f322
[opentelemetry.auto.trace 2020-12-16 11:14:30:145 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@6aa631ab
[opentelemetry.auto.trace 2020-12-16 11:14:30:150 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@3a2e8da1
[opentelemetry.auto.trace 2020-12-16 11:14:32:196 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@30cd809a
[opentelemetry.auto.trace 2020-12-16 11:14:33:092 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@23b68c7d
[opentelemetry.auto.trace 2020-12-16 11:14:34:279 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@7a627687
[opentelemetry.auto.trace 2020-12-16 11:14:36:355 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@5a93e2b1
[opentelemetry.auto.trace 2020-12-16 11:14:38:433 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@2a1eb1be
[opentelemetry.auto.trace 2020-12-16 11:14:39:857 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@281b8ec5
[opentelemetry.auto.trace 2020-12-16 11:14:40:512 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@3d34454c
[opentelemetry.auto.trace 2020-12-16 11:14:40:868 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@67a6798c
[opentelemetry.auto.trace 2020-12-16 11:14:42:590 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@5ea68a22
[opentelemetry.auto.trace 2020-12-16 11:14:42:796 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@64cd2f95
[opentelemetry.auto.trace 2020-12-16 11:14:44:666 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@72406011
[opentelemetry.auto.trace 2020-12-16 11:14:45:689 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@55f54a76
[opentelemetry.auto.trace 2020-12-16 11:14:46:743 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@549cca28
[opentelemetry.auto.trace 2020-12-16 11:14:48:814 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@38a4f9ba
[opentelemetry.auto.trace 2020-12-16 11:14:49:375 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@440b6f60
[opentelemetry.auto.trace 2020-12-16 11:14:50:892 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@71c44c18
[opentelemetry.auto.trace 2020-12-16 11:14:52:823 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:52:824 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:52:825 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.nio.AbstractNioByteChannel$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:52:846 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.bootstrap.ServerBootstrap$ServerBootstrapAcceptor$2 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:52:916 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:52:916 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:52:916 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.ServerImpl$ServerTransportListenerImpl$1TransportShutdownNow -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:52:965 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@39b84b2f
[opentelemetry.auto.trace 2020-12-16 11:14:53:227 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.netty.Http2ControlFrameLimitEncoder$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:266 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.netty.NettyServerTransport$1TerminationNotifier -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:317 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:53:317 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:53:317 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.netty.WriteQueue$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:326 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:53:326 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:53:327 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.LogExceptionRunnable -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:331 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:53:332 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:53:332 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.KeepAliveManager$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:335 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:53:335 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:53:336 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.KeepAliveManager$2 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:432 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.netty.NettyServer$1$1LoopReleaser -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:507 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.MessageDeframer$SizeEnforcingInputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:554 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.MessageFramer$BufferChainOutputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:559 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.MessageFramer$OutputStreamAdapter -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:568 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for com.google.common.util.concurrent.DirectExecutor
[opentelemetry.auto.trace 2020-12-16 11:14:53:568 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for com.google.common.util.concurrent.DirectExecutor
[opentelemetry.auto.trace 2020-12-16 11:14:53:571 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for io.grpc.internal.SerializingExecutor
[opentelemetry.auto.trace 2020-12-16 11:14:53:571 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.AbstractExecutorInstrumentation - Skipping executor instrumentation for io.grpc.internal.SerializingExecutor
[opentelemetry.auto.trace 2020-12-16 11:14:53:574 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:53:574 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:53:575 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.SerializingExecutor -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:597 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.ServerImpl$ServerTransportListenerImpl$1StreamCreated -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:601 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:53:601 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:53:602 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.ContextRunnable -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:608 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.ServerImpl$JumpToApplicationThreadServerStreamListener$1OnReady -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:640 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.netty.NettyServerHandler$6 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:649 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator
[opentelemetry.auto.trace 2020-12-16 11:14:53:655 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.handler.codec.http2.Http2CodecUtil$SimpleChannelPromiseAggregator -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:664 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.handler.codec.http2.DefaultHttp2ConnectionEncoder$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:670 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:53:670 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:53:670 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.AbstractServerStream$TransportState$2 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:674 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.ServerImpl$JumpToApplicationThreadServerStreamListener$1Closed -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:53:687 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:14:53:687 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:14:53:687 +0000] [grpc-nio-worker-ELG-1-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.AbstractChannel$AbstractUnsafe$8 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:14:55:040 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@1489add7
[opentelemetry.auto.trace 2020-12-16 11:14:57:114 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@735fbc28
[opentelemetry.auto.trace 2020-12-16 11:14:59:191 +0000] [qtp1557855053-22] DEBUG io.opentelemetry.javaagent.instrumentation.api.concurrent.RunnableWrapper - Wrapping runnable task org.eclipse.jetty.io.IdleTimeout$$Lambda$320/0x0000000800633840@1941a65f
^C[opentelemetry.auto.trace 2020-12-16 11:15:00:217 +0000] [JettyShutdownThread] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for org.eclipse.jetty.util.FutureCallback
[opentelemetry.auto.trace 2020-12-16 11:15:00:221 +0000] [JettyShutdownThread] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.util.FutureCallback -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:234 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.util.IO$NullOS -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:240 +0000] [qtp1557855053-25] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.eclipse.jetty.util.IO$ClosedIS -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
2020-12-16 11:15:00.244 [JettyShutdownThread] INFO  o.e.j.s.AbstractConnector - Stopped ServerConnector@74597c37{HTTP/1.1, (http/1.1)}{0.0.0.0:50062}
2020-12-16 11:15:00.251 [JettyShutdownThread] INFO  o.e.j.s.h.ContextHandler - Stopped o.e.j.s.ServletContextHandler@4b37b01e{/,null,STOPPED}
2020-12-16 11:15:00.256 [Thread-0] INFO  o.h.c.s.PlatformService - Trying to shutdown service - entity-service...
2020-12-16 11:15:00.256 [Thread-0] INFO  o.h.e.s.EntityService - Shutting down service: entity-service
[opentelemetry.auto.trace 2020-12-16 11:15:00:261 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:15:00:261 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:15:00:262 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.channel.AbstractChannelHandlerContext$11 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:266 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.netty.NettyServer$3 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:271 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:15:00:271 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:15:00:272 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.netty.util.concurrent.DefaultPromise$1 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:277 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:15:00:277 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:15:00:277 +0000] [grpc-nio-boss-ELG-3-1] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.SharedResourceHolder$2 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:378 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:15:00:379 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:15:00:379 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.ManagedChannelImpl$1Shutdown -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:383 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:15:00:383 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:15:00:383 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.ManagedChannelImpl$RealChannel$1RealChannelShutdown -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:387 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:15:00:387 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:15:00:388 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.DelayedClientTransport$4 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:391 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Found context-store access in io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule
[opentelemetry.auto.trace 2020-12-16 11:15:00:391 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.context.FieldBackedProvider - Rewriting context-store map fetch for instrumenter io.opentelemetry.javaagent.instrumentation.javaconcurrent.ExecutorInstrumentationModule: java.lang.Runnable -> io.opentelemetry.javaagent.instrumentation.api.concurrent.State
[opentelemetry.auto.trace 2020-12-16 11:15:00:392 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed io.grpc.internal.ManagedChannelImpl$1CancelIdleTimer -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
2020-12-16 11:15:00.392 [Thread-0] INFO  o.h.c.s.PlatformService - Stopping metrics registry
2020-12-16 11:15:00.401 [Thread-0] INFO  o.h.c.s.PlatformService - Service - entity-service is shutdown.
[opentelemetry.auto.trace 2020-12-16 11:15:00:415 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1 -> [io.opentelemetry.javaagent.instrumentation.apachehttpclient.v4_0.HostAndRequestAsHttpUriRequest, io.opentelemetry.javaagent.instrumentation.apachehttpclient.v4_0.ApacheHttpClientHelper, io.opentelemetry.javaagent.instrumentation.apachehttpclient.v4_0.WrappingStatusSettingResponseHandler, io.opentelemetry.javaagent.instrumentation.apachehttpclient.v4_0.ApacheHttpClientTracer, io.opentelemetry.javaagent.instrumentation.apachehttpclient.v4_0.HttpHeadersInjectAdapter]
[opentelemetry.auto.trace 2020-12-16 11:15:00:425 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.HelperInjector - Injecting classes onto classloader jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1 -> [io.opentelemetry.instrumentation.hypertrace.apachehttpclient.v4_0.ApacheHttpClientObjectRegistry, io.opentelemetry.instrumentation.hypertrace.apachehttpclient.v4_0.ApacheHttpClientUtils]
[opentelemetry.auto.trace 2020-12-16 11:15:00:442 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.http.impl.client.CloseableHttpClient -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:454 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.http.impl.client.MinimalHttpClient -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:494 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.http.impl.client.InternalHttpClient -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:777 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.http.client.entity.DeflateInputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:975 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.http.impl.execchain.RequestEntityProxy -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:978 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.instrumentation.javaconcurrent.FutureInstrumentation - Skipping future instrumentation for org.apache.http.pool.AbstractConnPool$2
^C[opentelemetry.auto.trace 2020-12-16 11:15:00:982 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.http.pool.AbstractConnPool$2 -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:969 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.http.impl.io.ChunkedInputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:975 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.http.impl.io.IdentityInputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:980 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.http.impl.io.EmptyInputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:986 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.http.impl.io.ContentLengthInputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:994 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.http.impl.io.ChunkedOutputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:00:999 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.http.impl.io.IdentityOutputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:01:005 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.http.impl.io.ContentLengthOutputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:01:015 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.http.impl.conn.LoggingInputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
[opentelemetry.auto.trace 2020-12-16 11:15:01:020 +0000] [Thread-0] DEBUG io.opentelemetry.javaagent.tooling.AgentInstaller$TransformLoggingListener - Transformed org.apache.http.impl.conn.LoggingOutputStream -- jdk.internal.loader.ClassLoaders$AppClassLoader@695a69a1
2020-12-16 11:15:01.068 [Thread-0] ERROR o.h.c.s.PlatformServiceLauncher - Error while calling quitquitquit
org.apache.http.conn.HttpHostConnectException: Connect to 127.0.0.1:15020 [/127.0.0.1] failed: Connection refused (Connection refused)
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:156) ~[httpclient-4.5.13.jar:4.5.13]
	at org.apache.http.impl.conn.PoolingHttpClientConnectionManager.connect(PoolingHttpClientConnectionManager.java:376) ~[httpclient-4.5.13.jar:4.5.13]
	at org.apache.http.impl.execchain.MainClientExec.establishRoute(MainClientExec.java:393) ~[httpclient-4.5.13.jar:4.5.13]
	at org.apache.http.impl.execchain.MainClientExec.execute(MainClientExec.java:236) ~[httpclient-4.5.13.jar:4.5.13]
	at org.apache.http.impl.execchain.ProtocolExec.execute(ProtocolExec.java:186) ~[httpclient-4.5.13.jar:4.5.13]
	at org.apache.http.impl.execchain.RetryExec.execute(RetryExec.java:89) ~[httpclient-4.5.13.jar:4.5.13]
	at org.apache.http.impl.execchain.RedirectExec.execute(RedirectExec.java:110) ~[httpclient-4.5.13.jar:4.5.13]
	at org.apache.http.impl.client.InternalHttpClient.doExecute(InternalHttpClient.java:185) ~[httpclient-4.5.13.jar:4.5.13]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:83) ~[httpclient-4.5.13.jar:4.5.13]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:108) ~[httpclient-4.5.13.jar:4.5.13]
	at org.apache.http.impl.client.CloseableHttpClient.execute(CloseableHttpClient.java:56) ~[httpclient-4.5.13.jar:4.5.13]
	at org.hypertrace.core.serviceframework.PlatformServiceLauncher.finalizeService(PlatformServiceLauncher.java:64) ~[platform-service-framework-0.1.18.jar:?]
	at org.hypertrace.core.serviceframework.PlatformServiceLauncher.lambda$updateRuntime$0(PlatformServiceLauncher.java:46) ~[platform-service-framework-0.1.18.jar:?]
	at java.lang.Thread.run(Unknown Source) [?:?]
Caused by: java.net.ConnectException: Connection refused (Connection refused)
	at java.net.PlainSocketImpl.socketConnect(Native Method) ~[?:?]
	at java.net.AbstractPlainSocketImpl.doConnect(Unknown Source) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connectToAddress(Unknown Source) ~[?:?]
	at java.net.AbstractPlainSocketImpl.connect(Unknown Source) ~[?:?]
	at java.net.SocksSocketImpl.connect(Unknown Source) ~[?:?]
	at java.net.Socket.connect(Unknown Source) ~[?:?]
	at org.apache.http.conn.socket.PlainConnectionSocketFactory.connectSocket(PlainConnectionSocketFactory.java:75) ~[httpclient-4.5.13.jar:4.5.13]
	at org.apache.http.impl.conn.DefaultHttpClientConnectionOperator.connect(DefaultHttpClientConnectionOperator.java:142) ~[httpclient-4.5.13.jar:4.5.13]
	... 13 more
