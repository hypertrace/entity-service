main.class = org.hypertrace.entity.service.EntityService
service.name = entity-service
service.port = 50061
service.admin.port = 50062
entity.service.config = {
  entity-service {
    dataStoreType = mongo
    mongo {
      host = localhost
      host = ${?MONGO_HOST}
      port = 27017
    }
  }
  publish.change.events = false
  query.aggregation.enabled = true
}
attribute.service.config = {
  host = localhost
  host = ${?ATTRIBUTE_SERVICE_HOST_CONFIG}
  port = 9012
  port = ${?ATTRIBUTE_SERVICE_PORT_CONFIG}
}

entity.service.change.skip.attributes = []

entity.service.idAttributeMap = [
  {
    scope = API
    attribute = API.id
  },
  {
    scope = SERVICE
    attribute = SERVICE.id
  },
  {
    scope = BACKEND
    attribute = BACKEND.id
  },
]

entity.service.attributeMap = [
  {
    "scope": "API",
    "name": "API.id",
    "subDocPath": "entityId"
  },
  {
    "scope": "API",
    "name": "API.name",
    "subDocPath": "attributes.API_NAME"
  },
  {
    "scope": "API",
    "name": "API.apiType",
    "subDocPath": "attributes.API_TYPE"
  },
  {
    "scope": "API",
    "name": "API.httpMethod",
    "subDocPath": "attributes.http_method"
  },
  {
    "scope": "API",
    "name": "API.httpUrl",
    "subDocPath": "attributes.API_NAME"
  },
  {
    "scope": "API",
    "name": "API.serviceId",
    "subDocPath": "attributes.SERVICE_ID"
  },
  {
    "scope": "API",
    "name": "API.createdTime",
    "subDocPath": "createdTime"
  },
  {
    "scope": "API",
    "name": "API.lastUpdateTime",
    "subDocPath": "_lastUpdateTime"
  },
  {
    "scope": "API",
    "name": "API.apiDiscoveryState",
    "subDocPath": "attributes.api_discovery_state"
  },
  {
    "scope": "API",
    "name": "API.apiDiscoveryTimestamp",
    "subDocPath": "attributes.api_discovery_timestamp"
  },
  {
    "scope": "SERVICE",
    "name": "SERVICE.id",
    "subDocPath": "entityId"
  },
  {
    "scope": "SERVICE",
    "name": "SERVICE.name",
    "subDocPath": "entityName"
  },
  {
    "scope": "SERVICE",
    "name": "SERVICE.createdTime",
    "subDocPath": "createdTime"
  },
  {
    "scope": "API",
    "name": "API.labels",
    "subDocPath": "attributes.labels"
  },
  {
    "scope": "SERVICE",
    "name": "SERVICE.labels",
    "subDocPath": "attributes.labels"
  },
  {
    "scope": "API",
    "name": "API.pathParamsSchema",
    "subDocPath": "attributes.path_params_schema"
  },
  {
    "scope": "API",
    "name": "API.queryParamsSchema",
    "subDocPath": "attributes.query_params_schema"
  },
  {
    "scope": "API",
    "name": "API.pathParamsType",
    "subDocPath": "attributes.http_path_params_type"
  },
  {
    "scope": "API",
    "name": "API.queryParamsType",
    "subDocPath": "attributes.http_query_params_type"
  },
  {
    "scope": "API",
    "name": "API.pathParamsPii",
    "subDocPath": "attributes.http_path_params_pii"
  },
  {
    "scope": "API",
    "name": "API.queryParamsPii",
    "subDocPath": "attributes.http_query_params_pii"
  },
  {
    "scope": "API",
    "name": "API.hasPii",
    "subDocPath": "attributes.api_is_pii"
  },
  {
    "scope": "API",
    "name": "API.isAuthenticated",
    "subDocPath": "attributes.is_authenticated"
  },
  {
    "scope": "API",
    "name": "API.requestHeaders",
    "subDocPath": "attributes.request_headers"
  },
  {
    "scope": "API",
    "name": "API.responseHeaders",
    "subDocPath": "attributes.response_headers"
  },
  {
    "scope": "API",
    "name": "API.requestHeadersType",
    "subDocPath": "attributes.http_request_headers_type"
  },
  {
    "scope": "API",
    "name": "API.responseHeadersType",
    "subDocPath": "attributes.http_response_headers_type"
  },
  {
    "scope": "API",
    "name": "API.requestBodySchema",
    "subDocPath": "attributes.request_body_schema"
  },
  {
    "scope": "API",
    "name": "API.responseBodySchema",
    "subDocPath": "attributes.response_body_schema"
  },
  {
    "scope": "API",
    "name": "API.apiDefinition",
    "subDocPath": "attributes.api_definition"
  },
  {
    "scope": "API",
    "name": "API.insightId",
    "subDocPath": "attributes.insight_id"
  },
  {
    "scope": "API",
    "name": "API.likelihoodElements",
    "subDocPath": "attributes.likelihood_elements"
  },
  {
    "scope": "API",
    "name": "API.allLikelihoodElements",
    "subDocPath": "attributes.all_likelihood_elements"
  },
  {
    "scope": "API",
    "name": "API.attackLikelihoodScore",
    "subDocPath": "attributes.attack_likelihood_score"
  },
  {
    "scope": "API",
    "name": "API.impactElements",
    "subDocPath": "attributes.impact_elements"
  },
  {
    "scope": "API",
    "name": "API.allImpactElements",
    "subDocPath": "attributes.all_impact_elements"
  },
  {
    "scope": "API",
    "name": "API.attackImpactScore",
    "subDocPath": "attributes.attack_impact_score"
  },
  {
    "scope": "API",
    "name": "API.riskScore",
    "subDocPath": "attributes.risk_score"
  },
  {
    "scope": "API",
    "name": "API.riskScoreCategory",
    "subDocPath": "attributes.risk_score_category"
  },
  {
    "scope": "API",
    "name": "API.changeLabel",
    "subDocPath": "attributes.change_label"
  },
  {
    "scope": "API",
    "name": "API.changeLabelTimestamp",
    "subDocPath": "attributes.change_label_timestamp"
  },
  {
    "scope": "ACTOR",
    "name": "ACTOR.id",
    "subDocPath": "entityId"
  },
  {
    "scope": "ACTOR",
    "name": "ACTOR.actorId",
    "subDocPath": "attributes.actor_id"
  },
  {
    "scope": "ACTOR",
    "name": "ACTOR.lastActivity",
    "subDocPath": "attributes.last_activity_timestamp"
  },
  {
    "scope": "ACTOR",
    "name": "ACTOR.createdTime",
    "subDocPath": "createdTime"
  },
  {
    "scope": "ACTOR",
    "name": "ACTOR.status",
    "subDocPath": "attributes.status"
  },
  {
    "scope": "ACTOR",
    "name": "ACTOR.scoreCategory",
    "subDocPath": "attributes.score_category"
  },
  {
    "scope": "ACTOR",
    "name": "ACTOR.ipAddress",
    "subDocPath": "attributes.ip_address"
  },
  {
    "scope": "ACTOR",
    "name": "ACTOR.device",
    "subDocPath": "attributes.device"
  },
  {
    "scope": "ACTOR",
    "name": "ACTOR.ipAddresses",
    "subDocPath": "attributes.ip_addresses"
  },
  {
    "scope": "ACTOR",
    "name": "ACTOR.statusExpiration",
    "subDocPath": "attributes.status_expiry_timestamp"
  },
  {
    "scope": "ACTOR",
    "name": "ACTOR.tagDescriptions",
    "subDocPath": "attributes.tag_descriptions"
  },
  {
    "scope": "ACTOR",
    "name": "ACTOR.labels",
    "subDocPath": "attributes.labels"
  },
  {
    "scope": "API",
    "name": "API.dataTypeIds",
    "subDocPath": "attributes.data_type_ids"
  }
]

metrics.reporter {
  prefix = org.hypertrace.entity.service.EntityService
  names = ["prometheus"]
  console.reportInterval = 30
}

event.store {
  type = kafka
  bootstrap.servers = "localhost:9092"
  entity.change.events.producer {
    topic.name = entity-change-events
    bootstrap.servers = "localhost:9092"
    key.serializer = io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer
    value.serializer = io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer
    schema.registry.url = "http://localhost:8081"
  }
}
