main.class = org.hypertrace.entity.service.EntityService
service.name = entity-service
service.port = 50061
service.admin.port = 50062
entity.service.config = {
  entity-service {
    dataStoreType = mongo
    mongo {
      host = localhost
      host = ${?MONGO_HOST}
      port = 27017
    }
  }
  publish.change.events = false
  query.aggregation.enabled = false
}
attribute.service.config = {
  host = localhost
  host = ${?ATTRIBUTE_SERVICE_HOST_CONFIG}
  port = 9012
  port = ${?ATTRIBUTE_SERVICE_PORT_CONFIG}
}

entity.service.change.skip.attributes = [
  {
    scope = API
    attributes = ["last_called_millis", "change_label_timestamp", "api_discovery_timestamp"]
  },
  {
    scope = ACTOR
    attributes = ["last_activity_timestamp", "status_expiry_timestamp", "last_status_update_timestamp", "created_timestamp"]
  },
  {
    scope = AGENT
    attributes = ["lastSeen"]
  },
  {
    scope = ENVIRONMENT
    attributes = ["lastSeen"]
  },
  {
    scope = AGENT_MODULE
    attributes = ["lastSeen"]
  }
]
entity.service.idAttributeMap = [
  {
    scope = API
    attribute = API.id
  },
  {
    scope = SERVICE
    attribute = SERVICE.id
  },
  {
    scope = BACKEND
    attribute = BACKEND.id
  },
]

entity.service.attributeMap = [
  {
    "scope": "API",
    "name": "API.id",
    "subDocPath": "entityId"
  },
  {
    "scope": "API",
    "name": "API.name",
    "subDocPath": "entityName"
  },
  {
    "scope": "API",
    "name": "API.apiType",
    "subDocPath": "attributes.API_TYPE"
  },
  {
    "scope": "API",
    "name": "API.httpMethod",
    "subDocPath": "attributes.http_method"
  },
  {
    "scope": "API",
    "name": "API.httpUrl",
    "subDocPath": "attributes.API_NAME"
  },
  {
    "scope": "API",
    "name": "API.serviceId",
    "subDocPath": "attributes.SERVICE_ID"
  },
  {
    "scope": "API",
    "name": "API.createdTime",
    "subDocPath": "createdTime"
  },
  {
    "scope": "API",
    "name": "API.apiDiscoveryState",
    "subDocPath": "attributes.api_discovery_state"
  },
  {
    "scope": "API",
    "name": "API.serviceName",
    "subDocPath": "attributes.SERVICE_NAME"
  },
  {
    "scope": "SERVICE",
    "name": "SERVICE.id",
    "subDocPath": "entityId"
  },
  {
    "scope": "SERVICE",
    "name": "SERVICE.name",
    "subDocPath": "entityName"
  }
]

metrics.reporter {
  prefix = org.hypertrace.entity.service.EntityService
  names = ["prometheus"]
  console.reportInterval = 30
}

event.store {
  type = kafka
  bootstrap.servers = "localhost:9092"
  entity.change.events.producer {
    topic.name = entity-change-events
    bootstrap.servers = "localhost:9092"
    key.serializer = io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer
    value.serializer = io.confluent.kafka.serializers.protobuf.KafkaProtobufSerializer
    schema.registry.url = "http://localhost:8081"
  }
}
