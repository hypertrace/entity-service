syntax = "proto3";

option java_multiple_files = true;

package org.hypertrace.entity.query.service.v1;

import "org/hypertrace/entity/query/service/v1/request.proto";
import "org/hypertrace/entity/query/service/v1/response.proto";
import "org/hypertrace/entity/query/service/v1/value.proto";
import "org/hypertrace/entity/query/service/v1/entity_query_request.proto";
import "org/hypertrace/entity/data/service/v1/entity.proto";
import "org/hypertrace/entity/data/service/v1/entity_label.proto";
// TODO: Needed for Empty message
import "org/hypertrace/entity/data/service/v1/entity_data_request.proto";

message EntityIdAndLabelId {
  string entity_id = 1;
  string entity_label_id = 2;
}

message EntitiesByLabel {
  string entity_label_id = 1;
  repeated org.hypertrace.entity.data.service.v1.Entity entities = 2;
}

service EntityQueryService {
  rpc execute (EntityQueryRequest) returns (stream ResultSetChunk) {
  }
  rpc update (EntityUpdateRequest) returns (stream ResultSetChunk) {
  }

  rpc createEntityLabel (org.hypertrace.entity.data.service.v1.EntityLabel)
    returns (org.hypertrace.entity.data.service.v1.EntityLabel) {}
  rpc getEntityLabel (org.hypertrace.entity.data.service.v1.EntityLabelByIdRequest)
    returns (org.hypertrace.entity.data.service.v1.EntityLabel) {}
  rpc updateEntityLabel (org.hypertrace.entity.data.service.v1.EntityLabel)
    returns (stream org.hypertrace.entity.data.service.v1.EntityLabel) {}
  rpc getAllEntityLabels (org.hypertrace.entity.data.service.v1.Empty)
    returns (stream org.hypertrace.entity.data.service.v1.EntityLabel) {}

  rpc addEntityLabelToEntity (EntityIdAndLabelId)
    returns (org.hypertrace.entity.data.service.v1.Entity) {}
  rpc removeEntityLabelFromEntity (EntityIdAndLabelId)
    returns (org.hypertrace.entity.data.service.v1.Entity) {}
  rpc getEntitiesByLabel(org.hypertrace.entity.data.service.v1.Empty)
    returns (stream EntitiesByLabel) {}
}
